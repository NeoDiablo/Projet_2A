/* --- Generated by genom 2.99.29. Do not edit -------------------------- */

#ifndef H_DISPLAY_PARAMETERS
#define H_DISPLAY_PARAMETERS

#include "display_c_types.h"


/* --- Service input and output structures --------------------------------- */


/* input of abort_activity */
struct genom_display_abort_activity_input {
  uint32_t activity;
};

/* output of abort_activity */
struct genom_display_abort_activity_output {
};


int	genom_display_abort_activity_encode(char *buffer, int size,
		char *dst, int maxsize);
int	genom_display_abort_activity_decode(char *buffer, int size,
		char *dst, int maxsize);

/* input of connect_port */
struct genom_display_connect_port_input {
  char local[128];
  char remote[128];
};

/* output of connect_port */
struct genom_display_connect_port_output {
};


int	genom_display_connect_port_encode(char *buffer, int size,
		char *dst, int maxsize);
int	genom_display_connect_port_decode(char *buffer, int size,
		char *dst, int maxsize);

/* input of connect_service */
struct genom_display_connect_service_input {
  char local[128];
  char remote[128];
};

/* output of connect_service */
struct genom_display_connect_service_output {
};


int	genom_display_connect_service_encode(char *buffer, int size,
		char *dst, int maxsize);
int	genom_display_connect_service_decode(char *buffer, int size,
		char *dst, int maxsize);

/* input of kill */
struct genom_display_kill_input {
};

/* output of kill */
struct genom_display_kill_output {
};


int	genom_display_kill_encode(char *buffer, int size,
		char *dst, int maxsize);
int	genom_display_kill_decode(char *buffer, int size,
		char *dst, int maxsize);

/* input of GetCurrentPosition */
struct genom_display_GetCurrentPosition_input {
};

/* output of GetCurrentPosition */
struct genom_display_GetCurrentPosition_output {
  camera_robot position;
};


int	genom_display_GetCurrentPosition_encode(char *buffer, int size,
		char *dst, int maxsize);
int	genom_display_GetCurrentPosition_decode(char *buffer, int size,
		char *dst, int maxsize);

/* input of GetCurrentBattery */
struct genom_display_GetCurrentBattery_input {
};

/* output of GetCurrentBattery */
struct genom_display_GetCurrentBattery_output {
  loco_data batterie;
};


int	genom_display_GetCurrentBattery_encode(char *buffer, int size,
		char *dst, int maxsize);
int	genom_display_GetCurrentBattery_decode(char *buffer, int size,
		char *dst, int maxsize);

/* input of GetCurrentMap */
struct genom_display_GetCurrentMap_input {
};

/* output of GetCurrentMap */
struct genom_display_GetCurrentMap_output {
  camera_map image;
};


int	genom_display_GetCurrentMap_encode(char *buffer, int size,
		char *dst, int maxsize);
int	genom_display_GetCurrentMap_decode(char *buffer, int size,
		char *dst, int maxsize);

/* input of GetCurrentArena */
struct genom_display_GetCurrentArena_input {
};

/* output of GetCurrentArena */
struct genom_display_GetCurrentArena_output {
  camera_arena arene;
};


int	genom_display_GetCurrentArena_encode(char *buffer, int size,
		char *dst, int maxsize);
int	genom_display_GetCurrentArena_decode(char *buffer, int size,
		char *dst, int maxsize);

/* input of SendOrdersStop */
struct genom_display_SendOrdersStop_input {
};

/* output of SendOrdersStop */
struct genom_display_SendOrdersStop_output {
};


int	genom_display_SendOrdersStop_encode(char *buffer, int size,
		char *dst, int maxsize);
int	genom_display_SendOrdersStop_decode(char *buffer, int size,
		char *dst, int maxsize);

/* input of MonitoringStop */
struct genom_display_MonitoringStop_input {
};

/* output of MonitoringStop */
struct genom_display_MonitoringStop_output {
};


int	genom_display_MonitoringStop_encode(char *buffer, int size,
		char *dst, int maxsize);
int	genom_display_MonitoringStop_decode(char *buffer, int size,
		char *dst, int maxsize);

/* input of SendOrders */
struct genom_display_SendOrders_input {
};

/* output of SendOrders */
struct genom_display_SendOrders_output {
};


int	genom_display_SendOrders_encode(char *buffer, int size,
		char *dst, int maxsize);
int	genom_display_SendOrders_decode(char *buffer, int size,
		char *dst, int maxsize);

/* input of Monitoring */
struct genom_display_Monitoring_input {
};

/* output of Monitoring */
struct genom_display_Monitoring_output {
};


int	genom_display_Monitoring_encode(char *buffer, int size,
		char *dst, int maxsize);
int	genom_display_Monitoring_decode(char *buffer, int size,
		char *dst, int maxsize);


/* --- Remote input and output structures ---------------------------------- */



/* --- Exceptions ---------------------------------------------------------- */

int	genom_display_genom_incompatible_digest_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_display_genom_bad_transition_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_display_genom_interrupted_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_display_genom_serialization_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_display_genom_too_many_activities_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_display_genom_disallowed_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_display_genom_mwerr_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_display_genom_no_such_activity_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_display_genom_no_such_inport_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_display_genom_no_such_outport_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_display_genom_port_io_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_display_genom_no_such_remote_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_display_genom_no_such_service_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_display_genom_remote_io_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_display_display_INVALID_ORDER_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_display_display_INVALID_DATA_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_display_genom_unkex_encodex(char *buffer, int size, char *dst,
		int maxsize);
int	genom_display_genom_syserr_encodex(char *buffer, int size, char *dst,
		int maxsize);

#endif /* H_DISPLAY_PARAMETERS */
