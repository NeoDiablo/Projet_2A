/* --- Generated by genom 2.99.29. Do not edit -------------------------- */

#ifndef H_GENOM_TYPECOPY
#define H_GENOM_TYPECOPY

#include <assert.h>
#include <errno.h>
#include <stdlib.h>
#include <string.h>

static __inline__ void	genom_tinit_string64(
				char[64]);
static __inline__ void	genom_tfini_string64(
				char[64]);
static __inline__ int	genom_tcopy_string64(
				char[64],
				const char[64]);
static __inline__ void	genom_tinit_unsigned_long(
				uint32_t *);
static __inline__ void	genom_tfini_unsigned_long(
				uint32_t *);
static __inline__ int	genom_tcopy_unsigned_long(
				uint32_t *,
				uint32_t);
static __inline__ void	genom_tinit_float(
				float *);
static __inline__ void	genom_tfini_float(
				float *);
static __inline__ int	genom_tcopy_float(
				float *,
				float);
static __inline__ void	genom_tinit_t_genom_state_stats(
				genom_state_stats *);
static __inline__ void	genom_tfini_t_genom_state_stats(
				genom_state_stats *);
static __inline__ int	genom_tcopy_t_genom_state_stats(
				genom_state_stats *,
				const genom_state_stats *);
static __inline__ void	genom_tinit_t_genom_state_rusage(
				genom_state_rusage *);
static __inline__ void	genom_tfini_t_genom_state_rusage(
				genom_state_rusage *);
static __inline__ int	genom_tcopy_t_genom_state_rusage(
				genom_state_rusage *,
				const genom_state_rusage *);
static __inline__ void	genom_tinit_t_genom_state_activity(
				genom_state_activity *);
static __inline__ void	genom_tfini_t_genom_state_activity(
				genom_state_activity *);
static __inline__ int	genom_tcopy_t_genom_state_activity(
				genom_state_activity *,
				const genom_state_activity *);
static __inline__ void	genom_tinit_sequence_t_genom_state_activity(
				sequence_genom_state_activity *);
static __inline__ void	genom_tfini_sequence_t_genom_state_activity(
				sequence_genom_state_activity *);
static __inline__ int	genom_tcopy_sequence_t_genom_state_activity(
				sequence_genom_state_activity *,
				const sequence_genom_state_activity *);
static __inline__ void	genom_tinit_t_genom_state_task(
				genom_state_task *);
static __inline__ void	genom_tfini_t_genom_state_task(
				genom_state_task *);
static __inline__ int	genom_tcopy_t_genom_state_task(
				genom_state_task *,
				const genom_state_task *);
static __inline__ void	genom_tinit_sequence_t_genom_state_task(
				sequence_genom_state_task *);
static __inline__ void	genom_tfini_sequence_t_genom_state_task(
				sequence_genom_state_task *);
static __inline__ int	genom_tcopy_sequence_t_genom_state_task(
				sequence_genom_state_task *,
				const sequence_genom_state_task *);
static __inline__ void	genom_tinit_string33(
				char[33]);
static __inline__ void	genom_tfini_string33(
				char[33]);
static __inline__ int	genom_tcopy_string33(
				char[33],
				const char[33]);
static __inline__ void	genom_tinit_string31(
				char[31]);
static __inline__ void	genom_tfini_string31(
				char[31]);
static __inline__ int	genom_tcopy_string31(
				char[31],
				const char[31]);
static __inline__ void	genom_tinit_string32(
				char[32]);
static __inline__ void	genom_tfini_string32(
				char[32]);
static __inline__ int	genom_tcopy_string32(
				char[32],
				const char[32]);
static __inline__ void	genom_tinit_t_genom_state_component(
				genom_state_component *);
static __inline__ void	genom_tfini_t_genom_state_component(
				genom_state_component *);
static __inline__ int	genom_tcopy_t_genom_state_component(
				genom_state_component *,
				const genom_state_component *);
static __inline__ void	genom_tinit_port(
				loco_BAT *);
static __inline__ void	genom_tfini_port(
				loco_BAT *);
static __inline__ int	genom_tcopy_port(
				loco_BAT *,
				const loco_BAT *);
static __inline__ void	genom_tinit_long(
				int32_t *);
static __inline__ void	genom_tfini_long(
				int32_t *);
static __inline__ int	genom_tcopy_long(
				int32_t *,
				int32_t);
static __inline__ void	genom_tinit_string63(
				char[63]);
static __inline__ void	genom_tfini_string63(
				char[63]);
static __inline__ int	genom_tcopy_string63(
				char[63],
				const char[63]);
static __inline__ void	genom_tinit_t_pocolibs_metadata_service(
				pocolibs_metadata_service *);
static __inline__ void	genom_tfini_t_pocolibs_metadata_service(
				pocolibs_metadata_service *);
static __inline__ int	genom_tcopy_t_pocolibs_metadata_service(
				pocolibs_metadata_service *,
				const pocolibs_metadata_service *);
static __inline__ void	genom_tinit_sequence_t_pocolibs_metadata_service(
				sequence_pocolibs_metadata_service *);
static __inline__ void	genom_tfini_sequence_t_pocolibs_metadata_service(
				sequence_pocolibs_metadata_service *);
static __inline__ int	genom_tcopy_sequence_t_pocolibs_metadata_service(
				sequence_pocolibs_metadata_service *,
				const sequence_pocolibs_metadata_service *);
static __inline__ void	genom_tinit_t_pocolibs_metadata_component(
				pocolibs_metadata_component *);
static __inline__ void	genom_tfini_t_pocolibs_metadata_component(
				pocolibs_metadata_component *);
static __inline__ int	genom_tcopy_t_pocolibs_metadata_component(
				pocolibs_metadata_component *,
				const pocolibs_metadata_component *);
static __inline__ void	genom_tinit_t_display_order_enum(
				display_order_enum *);
static __inline__ void	genom_tfini_t_display_order_enum(
				display_order_enum *);
static __inline__ int	genom_tcopy_t_display_order_enum(
				display_order_enum *,
				display_order_enum);
static __inline__ void	genom_tinit_t_display_order(
				display_order *);
static __inline__ void	genom_tfini_t_display_order(
				display_order *);
static __inline__ int	genom_tcopy_t_display_order(
				display_order *,
				const display_order *);
static __inline__ void	genom_tinit_t_camera_coin(
				camera_coin *);
static __inline__ void	genom_tfini_t_camera_coin(
				camera_coin *);
static __inline__ int	genom_tcopy_t_camera_coin(
				camera_coin *,
				const camera_coin *);
static __inline__ void	genom_tinit_t_camera_arena(
				camera_arena *);
static __inline__ void	genom_tfini_t_camera_arena(
				camera_arena *);
static __inline__ int	genom_tcopy_t_camera_arena(
				camera_arena *,
				const camera_arena *);
static __inline__ void	genom_tinit_t_camera_robot(
				camera_robot *);
static __inline__ void	genom_tfini_t_camera_robot(
				camera_robot *);
static __inline__ int	genom_tcopy_t_camera_robot(
				camera_robot *,
				const camera_robot *);
static __inline__ void	genom_tinit_t_loco_data(
				loco_data *);
static __inline__ void	genom_tfini_t_loco_data(
				loco_data *);
static __inline__ int	genom_tcopy_t_loco_data(
				loco_data *,
				const loco_data *);
static __inline__ void	genom_tinit_t_genom_incompatible_digest_client_digest(
				genom_incompatible_digest_client_digest *);
static __inline__ void	genom_tfini_t_genom_incompatible_digest_client_digest(
				genom_incompatible_digest_client_digest *);
static __inline__ int	genom_tcopy_t_genom_incompatible_digest_client_digest(
				genom_incompatible_digest_client_digest *,
				const genom_incompatible_digest_client_digest *);
static __inline__ void	genom_tinit_t_genom_incompatible_digest_server_digest(
				genom_incompatible_digest_server_digest *);
static __inline__ void	genom_tfini_t_genom_incompatible_digest_server_digest(
				genom_incompatible_digest_server_digest *);
static __inline__ int	genom_tcopy_t_genom_incompatible_digest_server_digest(
				genom_incompatible_digest_server_digest *,
				const genom_incompatible_digest_server_digest *);
static __inline__ void	genom_tinit_t_genom_incompatible_digest(
				genom_incompatible_digest_detail *);
static __inline__ void	genom_tfini_t_genom_incompatible_digest(
				genom_incompatible_digest_detail *);
static __inline__ int	genom_tcopy_t_genom_incompatible_digest(
				genom_incompatible_digest_detail *,
				const genom_incompatible_digest_detail *);
static __inline__ void	genom_tinit_string128(
				char[128]);
static __inline__ void	genom_tfini_string128(
				char[128]);
static __inline__ int	genom_tcopy_string128(
				char[128],
				const char[128]);
static __inline__ void	genom_tinit_t_genom_bad_transition(
				genom_bad_transition_detail *);
static __inline__ void	genom_tfini_t_genom_bad_transition(
				genom_bad_transition_detail *);
static __inline__ int	genom_tcopy_t_genom_bad_transition(
				genom_bad_transition_detail *,
				const genom_bad_transition_detail *);
static __inline__ void	genom_tinit_t_genom_interrupted(
				genom_interrupted_detail *);
static __inline__ void	genom_tfini_t_genom_interrupted(
				genom_interrupted_detail *);
static __inline__ int	genom_tcopy_t_genom_interrupted(
				genom_interrupted_detail *,
				const genom_interrupted_detail *);
static __inline__ void	genom_tinit_t_genom_serialization(
				genom_serialization_detail *);
static __inline__ void	genom_tfini_t_genom_serialization(
				genom_serialization_detail *);
static __inline__ int	genom_tcopy_t_genom_serialization(
				genom_serialization_detail *,
				const genom_serialization_detail *);
static __inline__ void	genom_tinit_t_genom_too_many_activities(
				genom_too_many_activities_detail *);
static __inline__ void	genom_tfini_t_genom_too_many_activities(
				genom_too_many_activities_detail *);
static __inline__ int	genom_tcopy_t_genom_too_many_activities(
				genom_too_many_activities_detail *,
				const genom_too_many_activities_detail *);
static __inline__ void	genom_tinit_t_genom_disallowed(
				genom_disallowed_detail *);
static __inline__ void	genom_tfini_t_genom_disallowed(
				genom_disallowed_detail *);
static __inline__ int	genom_tcopy_t_genom_disallowed(
				genom_disallowed_detail *,
				const genom_disallowed_detail *);
static __inline__ void	genom_tinit_string256(
				char[256]);
static __inline__ void	genom_tfini_string256(
				char[256]);
static __inline__ int	genom_tcopy_string256(
				char[256],
				const char[256]);
static __inline__ void	genom_tinit_t_genom_mwerr(
				genom_mwerr_detail *);
static __inline__ void	genom_tfini_t_genom_mwerr(
				genom_mwerr_detail *);
static __inline__ int	genom_tcopy_t_genom_mwerr(
				genom_mwerr_detail *,
				const genom_mwerr_detail *);
static __inline__ void	genom_tinit_t_genom_no_such_activity(
				genom_no_such_activity_detail *);
static __inline__ void	genom_tfini_t_genom_no_such_activity(
				genom_no_such_activity_detail *);
static __inline__ int	genom_tcopy_t_genom_no_such_activity(
				genom_no_such_activity_detail *,
				const genom_no_such_activity_detail *);
static __inline__ void	genom_tinit_t_genom_no_such_inport(
				genom_no_such_inport_detail *);
static __inline__ void	genom_tfini_t_genom_no_such_inport(
				genom_no_such_inport_detail *);
static __inline__ int	genom_tcopy_t_genom_no_such_inport(
				genom_no_such_inport_detail *,
				const genom_no_such_inport_detail *);
static __inline__ void	genom_tinit_t_genom_no_such_outport(
				genom_no_such_outport_detail *);
static __inline__ void	genom_tfini_t_genom_no_such_outport(
				genom_no_such_outport_detail *);
static __inline__ int	genom_tcopy_t_genom_no_such_outport(
				genom_no_such_outport_detail *,
				const genom_no_such_outport_detail *);
static __inline__ void	genom_tinit_t_genom_port_io(
				genom_port_io_detail *);
static __inline__ void	genom_tfini_t_genom_port_io(
				genom_port_io_detail *);
static __inline__ int	genom_tcopy_t_genom_port_io(
				genom_port_io_detail *,
				const genom_port_io_detail *);
static __inline__ void	genom_tinit_t_genom_no_such_remote(
				genom_no_such_remote_detail *);
static __inline__ void	genom_tfini_t_genom_no_such_remote(
				genom_no_such_remote_detail *);
static __inline__ int	genom_tcopy_t_genom_no_such_remote(
				genom_no_such_remote_detail *,
				const genom_no_such_remote_detail *);
static __inline__ void	genom_tinit_t_genom_no_such_service(
				genom_no_such_service_detail *);
static __inline__ void	genom_tfini_t_genom_no_such_service(
				genom_no_such_service_detail *);
static __inline__ int	genom_tcopy_t_genom_no_such_service(
				genom_no_such_service_detail *,
				const genom_no_such_service_detail *);
static __inline__ void	genom_tinit_t_genom_remote_io(
				genom_remote_io_detail *);
static __inline__ void	genom_tfini_t_genom_remote_io(
				genom_remote_io_detail *);
static __inline__ int	genom_tcopy_t_genom_remote_io(
				genom_remote_io_detail *,
				const genom_remote_io_detail *);
static __inline__ void	genom_tinit_t_camera_map(
				camera_map *);
static __inline__ void	genom_tfini_t_camera_map(
				camera_map *);
static __inline__ int	genom_tcopy_t_camera_map(
				camera_map *,
				const camera_map *);
static __inline__ void	genom_tinit_t_loco_INVALID_ORDER(
				loco_INVALID_ORDER_detail *);
static __inline__ void	genom_tfini_t_loco_INVALID_ORDER(
				loco_INVALID_ORDER_detail *);
static __inline__ int	genom_tcopy_t_loco_INVALID_ORDER(
				loco_INVALID_ORDER_detail *,
				const loco_INVALID_ORDER_detail *);
static __inline__ void	genom_tinit_t_loco_INVALID_DATA(
				loco_INVALID_DATA_detail *);
static __inline__ void	genom_tfini_t_loco_INVALID_DATA(
				loco_INVALID_DATA_detail *);
static __inline__ int	genom_tcopy_t_loco_INVALID_DATA(
				loco_INVALID_DATA_detail *,
				const loco_INVALID_DATA_detail *);
static __inline__ void	genom_tinit_t_loco_dir_moteur_enum(
				loco_dir_moteur_enum *);
static __inline__ void	genom_tfini_t_loco_dir_moteur_enum(
				loco_dir_moteur_enum *);
static __inline__ int	genom_tcopy_t_loco_dir_moteur_enum(
				loco_dir_moteur_enum *,
				loco_dir_moteur_enum);
static __inline__ void	genom_tinit_t_loco_direction_moteur(
				loco_direction_moteur *);
static __inline__ void	genom_tfini_t_loco_direction_moteur(
				loco_direction_moteur *);
static __inline__ int	genom_tcopy_t_loco_direction_moteur(
				loco_direction_moteur *,
				const loco_direction_moteur *);
static __inline__ void	genom_tinit_t_loco_motor(
				loco_motor *);
static __inline__ void	genom_tfini_t_loco_motor(
				loco_motor *);
static __inline__ int	genom_tcopy_t_loco_motor(
				loco_motor *,
				const loco_motor *);
static __inline__ void	genom_tinit_t_loco_ids(
				loco_ids *);
static __inline__ void	genom_tfini_t_loco_ids(
				loco_ids *);
static __inline__ int	genom_tcopy_t_loco_ids(
				loco_ids *,
				const loco_ids *);



/* === string64 ========================================================= */

static __inline__ void
genom_tinit_string64(char data[64])
{
  *data = '\0';
}

static __inline__ void
genom_tfini_string64(char data[64])
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_tcopy_string64(char dst[64],
  const char src[64])
{
  strncpy(dst, src, 64);
  return 0;
}


/* === unsigned_long ==================================================== */

static __inline__ void
genom_tinit_unsigned_long(uint32_t *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ void
genom_tfini_unsigned_long(uint32_t *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_tcopy_unsigned_long(uint32_t *dst,
  uint32_t src)
{
  *(dst) = src;
  return 0;
}


/* === float ============================================================ */

static __inline__ void
genom_tinit_float(float *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ void
genom_tfini_float(float *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_tcopy_float(float *dst,
  float src)
{
  *(dst) = src;
  return 0;
}


/* === t_genom_state_stats ============================================== */

static __inline__ void
genom_tinit_t_genom_state_stats(genom_state_stats *data)
{
  genom_tinit_float(&(data->last));
  genom_tinit_float(&(data->max));
  genom_tinit_float(&(data->avg));
}

static __inline__ void
genom_tfini_t_genom_state_stats(genom_state_stats *data)
{
  genom_tfini_float(&(data->last));
  genom_tfini_float(&(data->max));
  genom_tfini_float(&(data->avg));
}

static __inline__ int
genom_tcopy_t_genom_state_stats(genom_state_stats *dst,
  const genom_state_stats *src)
{
  memcpy(dst, src, sizeof(genom_state_stats));
  return 0;
}


/* === t_genom_state_rusage ============================================= */

static __inline__ void
genom_tinit_t_genom_state_rusage(genom_state_rusage *data)
{
  genom_tinit_unsigned_long(&(data->cycles));
  genom_tinit_t_genom_state_stats(&(data->timings));
  genom_tinit_t_genom_state_stats(&(data->load));
}

static __inline__ void
genom_tfini_t_genom_state_rusage(genom_state_rusage *data)
{
  genom_tfini_unsigned_long(&(data->cycles));
  genom_tfini_t_genom_state_stats(&(data->timings));
  genom_tfini_t_genom_state_stats(&(data->load));
}

static __inline__ int
genom_tcopy_t_genom_state_rusage(genom_state_rusage *dst,
  const genom_state_rusage *src)
{
  memcpy(dst, src, sizeof(genom_state_rusage));
  return 0;
}


/* === t_genom_state_activity =========================================== */

static __inline__ void
genom_tinit_t_genom_state_activity(genom_state_activity *data)
{
  genom_tinit_unsigned_long(&(data->id));
  genom_tinit_string64(data->name);
}

static __inline__ void
genom_tfini_t_genom_state_activity(genom_state_activity *data)
{
  genom_tfini_unsigned_long(&(data->id));
  genom_tfini_string64(data->name);
}

static __inline__ int
genom_tcopy_t_genom_state_activity(genom_state_activity *dst,
  const genom_state_activity *src)
{
  memcpy(dst, src, sizeof(genom_state_activity));
  return 0;
}


/* === sequence_t_genom_state_activity ================================== */

static __inline__ void
genom_tinit_sequence_t_genom_state_activity(sequence_genom_state_activity *data)
{
  data->_maximum = data->_length = 0;
  data->_buffer = NULL;
  data->_release = NULL;
}

static __inline__ void
genom_tfini_sequence_t_genom_state_activity(sequence_genom_state_activity *data)
{
  uint32_t i;
  for (i=0; i<data->_length; i++)
    genom_tfini_t_genom_state_activity(
      &(data->_buffer[i]));
  data->_maximum = data->_length = 0;
  if (data->_release && data->_buffer) data->_release(data->_buffer);
  data->_buffer = NULL;
  data->_release = NULL;
}

static __inline__ int
genom_tcopy_sequence_t_genom_state_activity(sequence_genom_state_activity *dst,
  const sequence_genom_state_activity *src)
{
  int s;
  uint32_t i;
  genom_sequence_reserve(dst, src->_maximum);
  dst->_length = src->_length;
  for (i=0; i<src->_length; i++) {
    s = genom_tcopy_t_genom_state_activity(
      &(dst->_buffer[i]),
      &(src->_buffer[i]));
    if (s) return s;
  }
  return 0;
}


/* === t_genom_state_task =============================================== */

static __inline__ void
genom_tinit_t_genom_state_task(genom_state_task *data)
{
  genom_tinit_string64(data->name);
  genom_tinit_t_genom_state_rusage(&(data->rusage));
  genom_tinit_sequence_t_genom_state_activity(&(data->activity));
}

static __inline__ void
genom_tfini_t_genom_state_task(genom_state_task *data)
{
  genom_tfini_string64(data->name);
  genom_tfini_t_genom_state_rusage(&(data->rusage));
  genom_tfini_sequence_t_genom_state_activity(&(data->activity));
}

static __inline__ int
genom_tcopy_t_genom_state_task(genom_state_task *dst,
  const genom_state_task *src)
{
  int s;
  s = genom_tcopy_string64(
    dst->name,
    src->name);
  if (s) return s;
  s = genom_tcopy_t_genom_state_rusage(
    &(dst->rusage),
    &(src->rusage));
  if (s) return s;
  s = genom_tcopy_sequence_t_genom_state_activity(
    &(dst->activity),
    &(src->activity));
  if (s) return s;
}


/* === sequence_t_genom_state_task ====================================== */

static __inline__ void
genom_tinit_sequence_t_genom_state_task(sequence_genom_state_task *data)
{
  data->_maximum = data->_length = 0;
  data->_buffer = NULL;
  data->_release = NULL;
}

static __inline__ void
genom_tfini_sequence_t_genom_state_task(sequence_genom_state_task *data)
{
  uint32_t i;
  for (i=0; i<data->_length; i++)
    genom_tfini_t_genom_state_task(
      &(data->_buffer[i]));
  data->_maximum = data->_length = 0;
  if (data->_release && data->_buffer) data->_release(data->_buffer);
  data->_buffer = NULL;
  data->_release = NULL;
}

static __inline__ int
genom_tcopy_sequence_t_genom_state_task(sequence_genom_state_task *dst,
  const sequence_genom_state_task *src)
{
  int s;
  uint32_t i;
  genom_sequence_reserve(dst, src->_maximum);
  dst->_length = src->_length;
  for (i=0; i<src->_length; i++) {
    s = genom_tcopy_t_genom_state_task(
      &(dst->_buffer[i]),
      &(src->_buffer[i]));
    if (s) return s;
  }
  return 0;
}


/* === string33 ========================================================= */

static __inline__ void
genom_tinit_string33(char data[33])
{
  *data = '\0';
}

static __inline__ void
genom_tfini_string33(char data[33])
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_tcopy_string33(char dst[33],
  const char src[33])
{
  strncpy(dst, src, 33);
  return 0;
}


/* === string31 ========================================================= */

static __inline__ void
genom_tinit_string31(char data[31])
{
  *data = '\0';
}

static __inline__ void
genom_tfini_string31(char data[31])
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_tcopy_string31(char dst[31],
  const char src[31])
{
  strncpy(dst, src, 31);
  return 0;
}


/* === string32 ========================================================= */

static __inline__ void
genom_tinit_string32(char data[32])
{
  *data = '\0';
}

static __inline__ void
genom_tfini_string32(char data[32])
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_tcopy_string32(char dst[32],
  const char src[32])
{
  strncpy(dst, src, 32);
  return 0;
}


/* === t_genom_state_component ========================================== */

static __inline__ void
genom_tinit_t_genom_state_component(genom_state_component *data)
{
  genom_tinit_sequence_t_genom_state_task(&(data->task));
  genom_tinit_string33(data->digest);
  genom_tinit_string31(data->date);
  genom_tinit_string32(data->version);
}

static __inline__ void
genom_tfini_t_genom_state_component(genom_state_component *data)
{
  genom_tfini_sequence_t_genom_state_task(&(data->task));
  genom_tfini_string33(data->digest);
  genom_tfini_string31(data->date);
  genom_tfini_string32(data->version);
}

static __inline__ int
genom_tcopy_t_genom_state_component(genom_state_component *dst,
  const genom_state_component *src)
{
  int s;
  s = genom_tcopy_sequence_t_genom_state_task(
    &(dst->task),
    &(src->task));
  if (s) return s;
  s = genom_tcopy_string33(
    dst->digest,
    src->digest);
  if (s) return s;
  s = genom_tcopy_string31(
    dst->date,
    src->date);
  if (s) return s;
  s = genom_tcopy_string32(
    dst->version,
    src->version);
  if (s) return s;
}


/* === port ============================================================= */

static __inline__ void
genom_tinit_port(loco_BAT *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ void
genom_tfini_port(loco_BAT *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_tcopy_port(loco_BAT *dst,
  const loco_BAT *src)
{
  memcpy(dst, src, sizeof(loco_BAT));
  return 0;
}


/* === long ============================================================= */

static __inline__ void
genom_tinit_long(int32_t *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ void
genom_tfini_long(int32_t *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_tcopy_long(int32_t *dst,
  int32_t src)
{
  *(dst) = src;
  return 0;
}


/* === string63 ========================================================= */

static __inline__ void
genom_tinit_string63(char data[63])
{
  *data = '\0';
}

static __inline__ void
genom_tfini_string63(char data[63])
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_tcopy_string63(char dst[63],
  const char src[63])
{
  strncpy(dst, src, 63);
  return 0;
}


/* === t_pocolibs_metadata_service ====================================== */

static __inline__ void
genom_tinit_t_pocolibs_metadata_service(pocolibs_metadata_service *data)
{
  genom_tinit_long(&(data->rqstid));
  genom_tinit_string63(data->name);
  genom_tinit_string33(data->digest);
}

static __inline__ void
genom_tfini_t_pocolibs_metadata_service(pocolibs_metadata_service *data)
{
  genom_tfini_long(&(data->rqstid));
  genom_tfini_string63(data->name);
  genom_tfini_string33(data->digest);
}

static __inline__ int
genom_tcopy_t_pocolibs_metadata_service(pocolibs_metadata_service *dst,
  const pocolibs_metadata_service *src)
{
  memcpy(dst, src, sizeof(pocolibs_metadata_service));
  return 0;
}


/* === sequence_t_pocolibs_metadata_service ============================= */

static __inline__ void
genom_tinit_sequence_t_pocolibs_metadata_service(sequence_pocolibs_metadata_service *data)
{
  data->_maximum = data->_length = 0;
  data->_buffer = NULL;
  data->_release = NULL;
}

static __inline__ void
genom_tfini_sequence_t_pocolibs_metadata_service(sequence_pocolibs_metadata_service *data)
{
  uint32_t i;
  for (i=0; i<data->_length; i++)
    genom_tfini_t_pocolibs_metadata_service(
      &(data->_buffer[i]));
  data->_maximum = data->_length = 0;
  if (data->_release && data->_buffer) data->_release(data->_buffer);
  data->_buffer = NULL;
  data->_release = NULL;
}

static __inline__ int
genom_tcopy_sequence_t_pocolibs_metadata_service(sequence_pocolibs_metadata_service *dst,
  const sequence_pocolibs_metadata_service *src)
{
  int s;
  uint32_t i;
  genom_sequence_reserve(dst, src->_maximum);
  dst->_length = src->_length;
  for (i=0; i<src->_length; i++) {
    s = genom_tcopy_t_pocolibs_metadata_service(
      &(dst->_buffer[i]),
      &(src->_buffer[i]));
    if (s) return s;
  }
  return 0;
}


/* === t_pocolibs_metadata_component ==================================== */

static __inline__ void
genom_tinit_t_pocolibs_metadata_component(pocolibs_metadata_component *data)
{
  genom_tinit_sequence_t_pocolibs_metadata_service(&(data->services));
}

static __inline__ void
genom_tfini_t_pocolibs_metadata_component(pocolibs_metadata_component *data)
{
  genom_tfini_sequence_t_pocolibs_metadata_service(&(data->services));
}

static __inline__ int
genom_tcopy_t_pocolibs_metadata_component(pocolibs_metadata_component *dst,
  const pocolibs_metadata_component *src)
{
  int s;
  s = genom_tcopy_sequence_t_pocolibs_metadata_service(
    &(dst->services),
    &(src->services));
  if (s) return s;
}


/* === t_display_order_enum ============================================= */

static __inline__ void
genom_tinit_t_display_order_enum(display_order_enum *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ void
genom_tfini_t_display_order_enum(display_order_enum *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_tcopy_t_display_order_enum(display_order_enum *dst,
  display_order_enum src)
{
  *(dst) = src;
  return 0;
}


/* === t_display_order ================================================== */

static __inline__ void
genom_tinit_t_display_order(display_order *data)
{
  genom_tinit_t_display_order_enum(&(data->order));
}

static __inline__ void
genom_tfini_t_display_order(display_order *data)
{
  genom_tfini_t_display_order_enum(&(data->order));
}

static __inline__ int
genom_tcopy_t_display_order(display_order *dst,
  const display_order *src)
{
  memcpy(dst, src, sizeof(display_order));
  return 0;
}


/* === t_camera_coin ==================================================== */

static __inline__ void
genom_tinit_t_camera_coin(camera_coin *data)
{
  genom_tinit_float(&(data->x));
  genom_tinit_float(&(data->y));
}

static __inline__ void
genom_tfini_t_camera_coin(camera_coin *data)
{
  genom_tfini_float(&(data->x));
  genom_tfini_float(&(data->y));
}

static __inline__ int
genom_tcopy_t_camera_coin(camera_coin *dst,
  const camera_coin *src)
{
  memcpy(dst, src, sizeof(camera_coin));
  return 0;
}


/* === t_camera_arena =================================================== */

static __inline__ void
genom_tinit_t_camera_arena(camera_arena *data)
{
  genom_tinit_t_camera_coin(&(data->haut_gauche));
  genom_tinit_t_camera_coin(&(data->haut_droit));
  genom_tinit_t_camera_coin(&(data->bas_gauche));
  genom_tinit_t_camera_coin(&(data->bas_droit));
}

static __inline__ void
genom_tfini_t_camera_arena(camera_arena *data)
{
  genom_tfini_t_camera_coin(&(data->haut_gauche));
  genom_tfini_t_camera_coin(&(data->haut_droit));
  genom_tfini_t_camera_coin(&(data->bas_gauche));
  genom_tfini_t_camera_coin(&(data->bas_droit));
}

static __inline__ int
genom_tcopy_t_camera_arena(camera_arena *dst,
  const camera_arena *src)
{
  memcpy(dst, src, sizeof(camera_arena));
  return 0;
}


/* === t_camera_robot =================================================== */

static __inline__ void
genom_tinit_t_camera_robot(camera_robot *data)
{
  genom_tinit_t_camera_coin(&(data->position_avant));
  genom_tinit_t_camera_coin(&(data->position_arriere_gauche));
  genom_tinit_t_camera_coin(&(data->position_arriere_droit));
}

static __inline__ void
genom_tfini_t_camera_robot(camera_robot *data)
{
  genom_tfini_t_camera_coin(&(data->position_avant));
  genom_tfini_t_camera_coin(&(data->position_arriere_gauche));
  genom_tfini_t_camera_coin(&(data->position_arriere_droit));
}

static __inline__ int
genom_tcopy_t_camera_robot(camera_robot *dst,
  const camera_robot *src)
{
  memcpy(dst, src, sizeof(camera_robot));
  return 0;
}


/* === t_loco_data ====================================================== */

static __inline__ void
genom_tinit_t_loco_data(loco_data *data)
{
  genom_tinit_float(&(data->nombre));
}

static __inline__ void
genom_tfini_t_loco_data(loco_data *data)
{
  genom_tfini_float(&(data->nombre));
}

static __inline__ int
genom_tcopy_t_loco_data(loco_data *dst,
  const loco_data *src)
{
  memcpy(dst, src, sizeof(loco_data));
  return 0;
}


/* === t_genom_incompatible_digest_client_digest ======================== */

static __inline__ void
genom_tinit_t_genom_incompatible_digest_client_digest(genom_incompatible_digest_client_digest *data)
{
  genom_tinit_string32(data->version);
  genom_tinit_string32(data->date);
}

static __inline__ void
genom_tfini_t_genom_incompatible_digest_client_digest(genom_incompatible_digest_client_digest *data)
{
  genom_tfini_string32(data->version);
  genom_tfini_string32(data->date);
}

static __inline__ int
genom_tcopy_t_genom_incompatible_digest_client_digest(genom_incompatible_digest_client_digest *dst,
  const genom_incompatible_digest_client_digest *src)
{
  memcpy(dst, src, sizeof(genom_incompatible_digest_client_digest));
  return 0;
}


/* === t_genom_incompatible_digest_server_digest ======================== */

static __inline__ void
genom_tinit_t_genom_incompatible_digest_server_digest(genom_incompatible_digest_server_digest *data)
{
  genom_tinit_string32(data->version);
  genom_tinit_string32(data->date);
}

static __inline__ void
genom_tfini_t_genom_incompatible_digest_server_digest(genom_incompatible_digest_server_digest *data)
{
  genom_tfini_string32(data->version);
  genom_tfini_string32(data->date);
}

static __inline__ int
genom_tcopy_t_genom_incompatible_digest_server_digest(genom_incompatible_digest_server_digest *dst,
  const genom_incompatible_digest_server_digest *src)
{
  memcpy(dst, src, sizeof(genom_incompatible_digest_server_digest));
  return 0;
}


/* === t_genom_incompatible_digest ====================================== */

static __inline__ void
genom_tinit_t_genom_incompatible_digest(genom_incompatible_digest_detail *data)
{
  genom_tinit_t_genom_incompatible_digest_client_digest(&(data->client));
  genom_tinit_t_genom_incompatible_digest_server_digest(&(data->server));
}

static __inline__ void
genom_tfini_t_genom_incompatible_digest(genom_incompatible_digest_detail *data)
{
  genom_tfini_t_genom_incompatible_digest_client_digest(&(data->client));
  genom_tfini_t_genom_incompatible_digest_server_digest(&(data->server));
}

static __inline__ int
genom_tcopy_t_genom_incompatible_digest(genom_incompatible_digest_detail *dst,
  const genom_incompatible_digest_detail *src)
{
  memcpy(dst, src, sizeof(genom_incompatible_digest_detail));
  return 0;
}


/* === string128 ======================================================== */

static __inline__ void
genom_tinit_string128(char data[128])
{
  *data = '\0';
}

static __inline__ void
genom_tfini_string128(char data[128])
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_tcopy_string128(char dst[128],
  const char src[128])
{
  strncpy(dst, src, 128);
  return 0;
}


/* === t_genom_bad_transition =========================================== */

static __inline__ void
genom_tinit_t_genom_bad_transition(genom_bad_transition_detail *data)
{
  genom_tinit_string128(data->from);
  genom_tinit_string128(data->to);
}

static __inline__ void
genom_tfini_t_genom_bad_transition(genom_bad_transition_detail *data)
{
  genom_tfini_string128(data->from);
  genom_tfini_string128(data->to);
}

static __inline__ int
genom_tcopy_t_genom_bad_transition(genom_bad_transition_detail *dst,
  const genom_bad_transition_detail *src)
{
  memcpy(dst, src, sizeof(genom_bad_transition_detail));
  return 0;
}


/* === t_genom_interrupted ============================================== */

static __inline__ void
genom_tinit_t_genom_interrupted(genom_interrupted_detail *data)
{
  genom_tinit_string128(data->by);
}

static __inline__ void
genom_tfini_t_genom_interrupted(genom_interrupted_detail *data)
{
  genom_tfini_string128(data->by);
}

static __inline__ int
genom_tcopy_t_genom_interrupted(genom_interrupted_detail *dst,
  const genom_interrupted_detail *src)
{
  memcpy(dst, src, sizeof(genom_interrupted_detail));
  return 0;
}


/* === t_genom_serialization ============================================ */

static __inline__ void
genom_tinit_t_genom_serialization(genom_serialization_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ void
genom_tfini_t_genom_serialization(genom_serialization_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_tcopy_t_genom_serialization(genom_serialization_detail *dst,
  const genom_serialization_detail *src)
{
  (void)dst; (void)src; /* fix -Wunused-parameter */
  return 0;
}


/* === t_genom_too_many_activities ====================================== */

static __inline__ void
genom_tinit_t_genom_too_many_activities(genom_too_many_activities_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ void
genom_tfini_t_genom_too_many_activities(genom_too_many_activities_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_tcopy_t_genom_too_many_activities(genom_too_many_activities_detail *dst,
  const genom_too_many_activities_detail *src)
{
  (void)dst; (void)src; /* fix -Wunused-parameter */
  return 0;
}


/* === t_genom_disallowed =============================================== */

static __inline__ void
genom_tinit_t_genom_disallowed(genom_disallowed_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ void
genom_tfini_t_genom_disallowed(genom_disallowed_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_tcopy_t_genom_disallowed(genom_disallowed_detail *dst,
  const genom_disallowed_detail *src)
{
  (void)dst; (void)src; /* fix -Wunused-parameter */
  return 0;
}


/* === string256 ======================================================== */

static __inline__ void
genom_tinit_string256(char data[256])
{
  *data = '\0';
}

static __inline__ void
genom_tfini_string256(char data[256])
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_tcopy_string256(char dst[256],
  const char src[256])
{
  strncpy(dst, src, 256);
  return 0;
}


/* === t_genom_mwerr ==================================================== */

static __inline__ void
genom_tinit_t_genom_mwerr(genom_mwerr_detail *data)
{
  genom_tinit_string256(data->what);
}

static __inline__ void
genom_tfini_t_genom_mwerr(genom_mwerr_detail *data)
{
  genom_tfini_string256(data->what);
}

static __inline__ int
genom_tcopy_t_genom_mwerr(genom_mwerr_detail *dst,
  const genom_mwerr_detail *src)
{
  memcpy(dst, src, sizeof(genom_mwerr_detail));
  return 0;
}


/* === t_genom_no_such_activity ========================================= */

static __inline__ void
genom_tinit_t_genom_no_such_activity(genom_no_such_activity_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ void
genom_tfini_t_genom_no_such_activity(genom_no_such_activity_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_tcopy_t_genom_no_such_activity(genom_no_such_activity_detail *dst,
  const genom_no_such_activity_detail *src)
{
  (void)dst; (void)src; /* fix -Wunused-parameter */
  return 0;
}


/* === t_genom_no_such_inport =========================================== */

static __inline__ void
genom_tinit_t_genom_no_such_inport(genom_no_such_inport_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ void
genom_tfini_t_genom_no_such_inport(genom_no_such_inport_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_tcopy_t_genom_no_such_inport(genom_no_such_inport_detail *dst,
  const genom_no_such_inport_detail *src)
{
  (void)dst; (void)src; /* fix -Wunused-parameter */
  return 0;
}


/* === t_genom_no_such_outport ========================================== */

static __inline__ void
genom_tinit_t_genom_no_such_outport(genom_no_such_outport_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ void
genom_tfini_t_genom_no_such_outport(genom_no_such_outport_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_tcopy_t_genom_no_such_outport(genom_no_such_outport_detail *dst,
  const genom_no_such_outport_detail *src)
{
  (void)dst; (void)src; /* fix -Wunused-parameter */
  return 0;
}


/* === t_genom_port_io ================================================== */

static __inline__ void
genom_tinit_t_genom_port_io(genom_port_io_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ void
genom_tfini_t_genom_port_io(genom_port_io_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_tcopy_t_genom_port_io(genom_port_io_detail *dst,
  const genom_port_io_detail *src)
{
  (void)dst; (void)src; /* fix -Wunused-parameter */
  return 0;
}


/* === t_genom_no_such_remote =========================================== */

static __inline__ void
genom_tinit_t_genom_no_such_remote(genom_no_such_remote_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ void
genom_tfini_t_genom_no_such_remote(genom_no_such_remote_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_tcopy_t_genom_no_such_remote(genom_no_such_remote_detail *dst,
  const genom_no_such_remote_detail *src)
{
  (void)dst; (void)src; /* fix -Wunused-parameter */
  return 0;
}


/* === t_genom_no_such_service ========================================== */

static __inline__ void
genom_tinit_t_genom_no_such_service(genom_no_such_service_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ void
genom_tfini_t_genom_no_such_service(genom_no_such_service_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_tcopy_t_genom_no_such_service(genom_no_such_service_detail *dst,
  const genom_no_such_service_detail *src)
{
  (void)dst; (void)src; /* fix -Wunused-parameter */
  return 0;
}


/* === t_genom_remote_io ================================================ */

static __inline__ void
genom_tinit_t_genom_remote_io(genom_remote_io_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ void
genom_tfini_t_genom_remote_io(genom_remote_io_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_tcopy_t_genom_remote_io(genom_remote_io_detail *dst,
  const genom_remote_io_detail *src)
{
  (void)dst; (void)src; /* fix -Wunused-parameter */
  return 0;
}


/* === t_camera_map ===================================================== */

static __inline__ void
genom_tinit_t_camera_map(camera_map *data)
{
  genom_tinit_float(&(data->R));
  genom_tinit_float(&(data->G));
  genom_tinit_float(&(data->B));
}

static __inline__ void
genom_tfini_t_camera_map(camera_map *data)
{
  genom_tfini_float(&(data->R));
  genom_tfini_float(&(data->G));
  genom_tfini_float(&(data->B));
}

static __inline__ int
genom_tcopy_t_camera_map(camera_map *dst,
  const camera_map *src)
{
  memcpy(dst, src, sizeof(camera_map));
  return 0;
}


/* === t_loco_INVALID_ORDER ============================================= */

static __inline__ void
genom_tinit_t_loco_INVALID_ORDER(loco_INVALID_ORDER_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ void
genom_tfini_t_loco_INVALID_ORDER(loco_INVALID_ORDER_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_tcopy_t_loco_INVALID_ORDER(loco_INVALID_ORDER_detail *dst,
  const loco_INVALID_ORDER_detail *src)
{
  (void)dst; (void)src; /* fix -Wunused-parameter */
  return 0;
}


/* === t_loco_INVALID_DATA ============================================== */

static __inline__ void
genom_tinit_t_loco_INVALID_DATA(loco_INVALID_DATA_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ void
genom_tfini_t_loco_INVALID_DATA(loco_INVALID_DATA_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_tcopy_t_loco_INVALID_DATA(loco_INVALID_DATA_detail *dst,
  const loco_INVALID_DATA_detail *src)
{
  (void)dst; (void)src; /* fix -Wunused-parameter */
  return 0;
}


/* === t_loco_dir_moteur_enum =========================================== */

static __inline__ void
genom_tinit_t_loco_dir_moteur_enum(loco_dir_moteur_enum *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ void
genom_tfini_t_loco_dir_moteur_enum(loco_dir_moteur_enum *data)
{
  (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_tcopy_t_loco_dir_moteur_enum(loco_dir_moteur_enum *dst,
  loco_dir_moteur_enum src)
{
  *(dst) = src;
  return 0;
}


/* === t_loco_direction_moteur ========================================== */

static __inline__ void
genom_tinit_t_loco_direction_moteur(loco_direction_moteur *data)
{
  genom_tinit_t_loco_dir_moteur_enum(&(data->direction));
}

static __inline__ void
genom_tfini_t_loco_direction_moteur(loco_direction_moteur *data)
{
  genom_tfini_t_loco_dir_moteur_enum(&(data->direction));
}

static __inline__ int
genom_tcopy_t_loco_direction_moteur(loco_direction_moteur *dst,
  const loco_direction_moteur *src)
{
  memcpy(dst, src, sizeof(loco_direction_moteur));
  return 0;
}


/* === t_loco_motor ===================================================== */

static __inline__ void
genom_tinit_t_loco_motor(loco_motor *data)
{
  genom_tinit_t_loco_direction_moteur(&(data->moteur_gauche));
  genom_tinit_t_loco_direction_moteur(&(data->moteur_droit));
}

static __inline__ void
genom_tfini_t_loco_motor(loco_motor *data)
{
  genom_tfini_t_loco_direction_moteur(&(data->moteur_gauche));
  genom_tfini_t_loco_direction_moteur(&(data->moteur_droit));
}

static __inline__ int
genom_tcopy_t_loco_motor(loco_motor *dst,
  const loco_motor *src)
{
  memcpy(dst, src, sizeof(loco_motor));
  return 0;
}


/* === t_loco_ids ======================================================= */

static __inline__ void
genom_tinit_t_loco_ids(loco_ids *data)
{
  genom_tinit_t_display_order(&(data->command));
  genom_tinit_t_camera_map(&(data->image));
  genom_tinit_t_camera_arena(&(data->arene));
  genom_tinit_t_camera_robot(&(data->position));
  genom_tinit_t_loco_data(&(data->batterie));
  genom_tinit_t_loco_motor(&(data->moteur));
}

static __inline__ void
genom_tfini_t_loco_ids(loco_ids *data)
{
  genom_tfini_t_display_order(&(data->command));
  genom_tfini_t_camera_map(&(data->image));
  genom_tfini_t_camera_arena(&(data->arene));
  genom_tfini_t_camera_robot(&(data->position));
  genom_tfini_t_loco_data(&(data->batterie));
  genom_tfini_t_loco_motor(&(data->moteur));
}

static __inline__ int
genom_tcopy_t_loco_ids(loco_ids *dst,
  const loco_ids *src)
{
  memcpy(dst, src, sizeof(loco_ids));
  return 0;
}

#endif /* H_GENOM_TYPECOPY */
