/* --- Generated by genom 2.99.29. Do not edit -------------------------- */

#ifndef H_LOCO_PARAMETERS
#define H_LOCO_PARAMETERS

#include "loco_c_types.h"


/* --- Service input and output structures --------------------------------- */


/* input of abort_activity */
struct genom_loco_abort_activity_input {
  uint32_t activity;
};

/* output of abort_activity */
struct genom_loco_abort_activity_output {
};


int	genom_loco_abort_activity_encode(char *buffer, int size,
		char *dst, int maxsize);
int	genom_loco_abort_activity_decode(char *buffer, int size,
		char *dst, int maxsize);

/* input of connect_port */
struct genom_loco_connect_port_input {
  char local[128];
  char remote[128];
};

/* output of connect_port */
struct genom_loco_connect_port_output {
};


int	genom_loco_connect_port_encode(char *buffer, int size,
		char *dst, int maxsize);
int	genom_loco_connect_port_decode(char *buffer, int size,
		char *dst, int maxsize);

/* input of connect_service */
struct genom_loco_connect_service_input {
  char local[128];
  char remote[128];
};

/* output of connect_service */
struct genom_loco_connect_service_output {
};


int	genom_loco_connect_service_encode(char *buffer, int size,
		char *dst, int maxsize);
int	genom_loco_connect_service_decode(char *buffer, int size,
		char *dst, int maxsize);

/* input of kill */
struct genom_loco_kill_input {
};

/* output of kill */
struct genom_loco_kill_output {
};


int	genom_loco_kill_encode(char *buffer, int size,
		char *dst, int maxsize);
int	genom_loco_kill_decode(char *buffer, int size,
		char *dst, int maxsize);

/* input of GetCurrentPosition */
struct genom_loco_GetCurrentPosition_input {
};

/* output of GetCurrentPosition */
struct genom_loco_GetCurrentPosition_output {
  camera_robot position;
};


int	genom_loco_GetCurrentPosition_encode(char *buffer, int size,
		char *dst, int maxsize);
int	genom_loco_GetCurrentPosition_decode(char *buffer, int size,
		char *dst, int maxsize);

/* input of GetCurrentBattery */
struct genom_loco_GetCurrentBattery_input {
};

/* output of GetCurrentBattery */
struct genom_loco_GetCurrentBattery_output {
  loco_data batterie;
};


int	genom_loco_GetCurrentBattery_encode(char *buffer, int size,
		char *dst, int maxsize);
int	genom_loco_GetCurrentBattery_decode(char *buffer, int size,
		char *dst, int maxsize);

/* input of GetCurrentMap */
struct genom_loco_GetCurrentMap_input {
};

/* output of GetCurrentMap */
struct genom_loco_GetCurrentMap_output {
  camera_map image;
};


int	genom_loco_GetCurrentMap_encode(char *buffer, int size,
		char *dst, int maxsize);
int	genom_loco_GetCurrentMap_decode(char *buffer, int size,
		char *dst, int maxsize);

/* input of GetCurrentArena */
struct genom_loco_GetCurrentArena_input {
};

/* output of GetCurrentArena */
struct genom_loco_GetCurrentArena_output {
  camera_arena arene;
};


int	genom_loco_GetCurrentArena_encode(char *buffer, int size,
		char *dst, int maxsize);
int	genom_loco_GetCurrentArena_decode(char *buffer, int size,
		char *dst, int maxsize);

/* input of MoveStop */
struct genom_loco_MoveStop_input {
};

/* output of MoveStop */
struct genom_loco_MoveStop_output {
};


int	genom_loco_MoveStop_encode(char *buffer, int size,
		char *dst, int maxsize);
int	genom_loco_MoveStop_decode(char *buffer, int size,
		char *dst, int maxsize);

/* input of BattStop */
struct genom_loco_BattStop_input {
};

/* output of BattStop */
struct genom_loco_BattStop_output {
};


int	genom_loco_BattStop_encode(char *buffer, int size,
		char *dst, int maxsize);
int	genom_loco_BattStop_decode(char *buffer, int size,
		char *dst, int maxsize);

/* input of StartMove */
struct genom_loco_StartMove_input {
};

/* output of StartMove */
struct genom_loco_StartMove_output {
};


int	genom_loco_StartMove_encode(char *buffer, int size,
		char *dst, int maxsize);
int	genom_loco_StartMove_decode(char *buffer, int size,
		char *dst, int maxsize);

/* input of StartBatt */
struct genom_loco_StartBatt_input {
};

/* output of StartBatt */
struct genom_loco_StartBatt_output {
};


int	genom_loco_StartBatt_encode(char *buffer, int size,
		char *dst, int maxsize);
int	genom_loco_StartBatt_decode(char *buffer, int size,
		char *dst, int maxsize);


/* --- Remote input and output structures ---------------------------------- */



/* --- Exceptions ---------------------------------------------------------- */

int	genom_loco_genom_incompatible_digest_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_loco_genom_bad_transition_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_loco_genom_interrupted_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_loco_genom_serialization_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_loco_genom_too_many_activities_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_loco_genom_disallowed_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_loco_genom_mwerr_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_loco_genom_no_such_activity_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_loco_genom_no_such_inport_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_loco_genom_no_such_outport_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_loco_genom_port_io_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_loco_genom_no_such_remote_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_loco_genom_no_such_service_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_loco_genom_remote_io_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_loco_loco_INVALID_ORDER_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_loco_loco_INVALID_DATA_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_loco_genom_unkex_encodex(char *buffer, int size, char *dst,
		int maxsize);
int	genom_loco_genom_syserr_encodex(char *buffer, int size, char *dst,
		int maxsize);

#endif /* H_LOCO_PARAMETERS */
