/* --- Generated by genom 2.99.29. Do not edit -------------------------- */

#ifndef H_GENOM_SERIALIZE
#define H_GENOM_SERIALIZE

#ifdef __linux__
/* Apparently we need _GNU_SOURCE defined to get access to strnlen on Linux */
# ifndef _GNU_SOURCE
#  define _GNU_SOURCE
# endif
#endif

#include <assert.h>
#include <errno.h>
#include <stdlib.h>
#include <string.h>

static __inline__ size_t	genom_maxserialen_string64(void);
static __inline__ size_t	genom_serialen_string64(
					const char[64]);
static __inline__ void		genom_serialize_string64(char **,
					const char[64]);
static __inline__ int		genom_deserialize_string64(char **,
					ssize_t *, char[64]);
static __inline__ size_t	genom_maxserialen_unsigned_long(void);
static __inline__ size_t	genom_serialen_unsigned_long(
					uint32_t);
static __inline__ void		genom_serialize_unsigned_long(char **,
					uint32_t);
static __inline__ int		genom_deserialize_unsigned_long(char **,
					ssize_t *, uint32_t *);
static __inline__ size_t	genom_maxserialen_float(void);
static __inline__ size_t	genom_serialen_float(
					float);
static __inline__ void		genom_serialize_float(char **,
					float);
static __inline__ int		genom_deserialize_float(char **,
					ssize_t *, float *);
static __inline__ size_t	genom_maxserialen_t_genom_state_stats(void);
static __inline__ size_t	genom_serialen_t_genom_state_stats(
					const genom_state_stats *);
static __inline__ void		genom_serialize_t_genom_state_stats(char **,
					const genom_state_stats *);
static __inline__ int		genom_deserialize_t_genom_state_stats(char **,
					ssize_t *, genom_state_stats *);
static __inline__ size_t	genom_maxserialen_t_genom_state_rusage(void);
static __inline__ size_t	genom_serialen_t_genom_state_rusage(
					const genom_state_rusage *);
static __inline__ void		genom_serialize_t_genom_state_rusage(char **,
					const genom_state_rusage *);
static __inline__ int		genom_deserialize_t_genom_state_rusage(char **,
					ssize_t *, genom_state_rusage *);
static __inline__ size_t	genom_maxserialen_t_genom_state_activity(void);
static __inline__ size_t	genom_serialen_t_genom_state_activity(
					const genom_state_activity *);
static __inline__ void		genom_serialize_t_genom_state_activity(char **,
					const genom_state_activity *);
static __inline__ int		genom_deserialize_t_genom_state_activity(char **,
					ssize_t *, genom_state_activity *);
static __inline__ size_t	genom_maxserialen_sequence_t_genom_state_activity(void);
static __inline__ size_t	genom_serialen_sequence_t_genom_state_activity(
					const sequence_genom_state_activity *);
static __inline__ void		genom_serialize_sequence_t_genom_state_activity(char **,
					const sequence_genom_state_activity *);
static __inline__ int		genom_deserialize_sequence_t_genom_state_activity(char **,
					ssize_t *, sequence_genom_state_activity *);
static __inline__ size_t	genom_maxserialen_t_genom_state_task(void);
static __inline__ size_t	genom_serialen_t_genom_state_task(
					const genom_state_task *);
static __inline__ void		genom_serialize_t_genom_state_task(char **,
					const genom_state_task *);
static __inline__ int		genom_deserialize_t_genom_state_task(char **,
					ssize_t *, genom_state_task *);
static __inline__ size_t	genom_maxserialen_sequence_t_genom_state_task(void);
static __inline__ size_t	genom_serialen_sequence_t_genom_state_task(
					const sequence_genom_state_task *);
static __inline__ void		genom_serialize_sequence_t_genom_state_task(char **,
					const sequence_genom_state_task *);
static __inline__ int		genom_deserialize_sequence_t_genom_state_task(char **,
					ssize_t *, sequence_genom_state_task *);
static __inline__ size_t	genom_maxserialen_string33(void);
static __inline__ size_t	genom_serialen_string33(
					const char[33]);
static __inline__ void		genom_serialize_string33(char **,
					const char[33]);
static __inline__ int		genom_deserialize_string33(char **,
					ssize_t *, char[33]);
static __inline__ size_t	genom_maxserialen_string31(void);
static __inline__ size_t	genom_serialen_string31(
					const char[31]);
static __inline__ void		genom_serialize_string31(char **,
					const char[31]);
static __inline__ int		genom_deserialize_string31(char **,
					ssize_t *, char[31]);
static __inline__ size_t	genom_maxserialen_string32(void);
static __inline__ size_t	genom_serialen_string32(
					const char[32]);
static __inline__ void		genom_serialize_string32(char **,
					const char[32]);
static __inline__ int		genom_deserialize_string32(char **,
					ssize_t *, char[32]);
static __inline__ size_t	genom_maxserialen_t_genom_state_component(void);
static __inline__ size_t	genom_serialen_t_genom_state_component(
					const genom_state_component *);
static __inline__ void		genom_serialize_t_genom_state_component(char **,
					const genom_state_component *);
static __inline__ int		genom_deserialize_t_genom_state_component(char **,
					ssize_t *, genom_state_component *);
static __inline__ size_t	genom_maxserialen_t_display_order_enum(void);
static __inline__ size_t	genom_serialen_t_display_order_enum(
					display_order_enum);
static __inline__ void		genom_serialize_t_display_order_enum(char **,
					display_order_enum);
static __inline__ int		genom_deserialize_t_display_order_enum(char **,
					ssize_t *, display_order_enum *);
static __inline__ size_t	genom_maxserialen_t_display_order(void);
static __inline__ size_t	genom_serialen_t_display_order(
					const display_order *);
static __inline__ void		genom_serialize_t_display_order(char **,
					const display_order *);
static __inline__ int		genom_deserialize_t_display_order(char **,
					ssize_t *, display_order *);
static __inline__ size_t	genom_maxserialen_t_camera_coin(void);
static __inline__ size_t	genom_serialen_t_camera_coin(
					const camera_coin *);
static __inline__ void		genom_serialize_t_camera_coin(char **,
					const camera_coin *);
static __inline__ int		genom_deserialize_t_camera_coin(char **,
					ssize_t *, camera_coin *);
static __inline__ size_t	genom_maxserialen_t_camera_arena(void);
static __inline__ size_t	genom_serialen_t_camera_arena(
					const camera_arena *);
static __inline__ void		genom_serialize_t_camera_arena(char **,
					const camera_arena *);
static __inline__ int		genom_deserialize_t_camera_arena(char **,
					ssize_t *, camera_arena *);
static __inline__ size_t	genom_maxserialen_t_camera_robot(void);
static __inline__ size_t	genom_serialen_t_camera_robot(
					const camera_robot *);
static __inline__ void		genom_serialize_t_camera_robot(char **,
					const camera_robot *);
static __inline__ int		genom_deserialize_t_camera_robot(char **,
					ssize_t *, camera_robot *);
static __inline__ size_t	genom_maxserialen_t_loco_data(void);
static __inline__ size_t	genom_serialen_t_loco_data(
					const loco_data *);
static __inline__ void		genom_serialize_t_loco_data(char **,
					const loco_data *);
static __inline__ int		genom_deserialize_t_loco_data(char **,
					ssize_t *, loco_data *);
static __inline__ size_t	genom_maxserialen_t_genom_incompatible_digest_client_digest(void);
static __inline__ size_t	genom_serialen_t_genom_incompatible_digest_client_digest(
					const genom_incompatible_digest_client_digest *);
static __inline__ void		genom_serialize_t_genom_incompatible_digest_client_digest(char **,
					const genom_incompatible_digest_client_digest *);
static __inline__ int		genom_deserialize_t_genom_incompatible_digest_client_digest(char **,
					ssize_t *, genom_incompatible_digest_client_digest *);
static __inline__ size_t	genom_maxserialen_t_genom_incompatible_digest_server_digest(void);
static __inline__ size_t	genom_serialen_t_genom_incompatible_digest_server_digest(
					const genom_incompatible_digest_server_digest *);
static __inline__ void		genom_serialize_t_genom_incompatible_digest_server_digest(char **,
					const genom_incompatible_digest_server_digest *);
static __inline__ int		genom_deserialize_t_genom_incompatible_digest_server_digest(char **,
					ssize_t *, genom_incompatible_digest_server_digest *);
static __inline__ size_t	genom_maxserialen_t_genom_incompatible_digest(void);
static __inline__ size_t	genom_serialen_t_genom_incompatible_digest(
					const genom_incompatible_digest_detail *);
static __inline__ void		genom_serialize_t_genom_incompatible_digest(char **,
					const genom_incompatible_digest_detail *);
static __inline__ int		genom_deserialize_t_genom_incompatible_digest(char **,
					ssize_t *, genom_incompatible_digest_detail *);
static __inline__ size_t	genom_maxserialen_string128(void);
static __inline__ size_t	genom_serialen_string128(
					const char[128]);
static __inline__ void		genom_serialize_string128(char **,
					const char[128]);
static __inline__ int		genom_deserialize_string128(char **,
					ssize_t *, char[128]);
static __inline__ size_t	genom_maxserialen_t_genom_bad_transition(void);
static __inline__ size_t	genom_serialen_t_genom_bad_transition(
					const genom_bad_transition_detail *);
static __inline__ void		genom_serialize_t_genom_bad_transition(char **,
					const genom_bad_transition_detail *);
static __inline__ int		genom_deserialize_t_genom_bad_transition(char **,
					ssize_t *, genom_bad_transition_detail *);
static __inline__ size_t	genom_maxserialen_t_genom_interrupted(void);
static __inline__ size_t	genom_serialen_t_genom_interrupted(
					const genom_interrupted_detail *);
static __inline__ void		genom_serialize_t_genom_interrupted(char **,
					const genom_interrupted_detail *);
static __inline__ int		genom_deserialize_t_genom_interrupted(char **,
					ssize_t *, genom_interrupted_detail *);
static __inline__ size_t	genom_maxserialen_t_genom_serialization(void);
static __inline__ size_t	genom_serialen_t_genom_serialization(
					const genom_serialization_detail *);
static __inline__ void		genom_serialize_t_genom_serialization(char **,
					const genom_serialization_detail *);
static __inline__ int		genom_deserialize_t_genom_serialization(char **,
					ssize_t *, genom_serialization_detail *);
static __inline__ size_t	genom_maxserialen_t_genom_too_many_activities(void);
static __inline__ size_t	genom_serialen_t_genom_too_many_activities(
					const genom_too_many_activities_detail *);
static __inline__ void		genom_serialize_t_genom_too_many_activities(char **,
					const genom_too_many_activities_detail *);
static __inline__ int		genom_deserialize_t_genom_too_many_activities(char **,
					ssize_t *, genom_too_many_activities_detail *);
static __inline__ size_t	genom_maxserialen_t_genom_disallowed(void);
static __inline__ size_t	genom_serialen_t_genom_disallowed(
					const genom_disallowed_detail *);
static __inline__ void		genom_serialize_t_genom_disallowed(char **,
					const genom_disallowed_detail *);
static __inline__ int		genom_deserialize_t_genom_disallowed(char **,
					ssize_t *, genom_disallowed_detail *);
static __inline__ size_t	genom_maxserialen_string256(void);
static __inline__ size_t	genom_serialen_string256(
					const char[256]);
static __inline__ void		genom_serialize_string256(char **,
					const char[256]);
static __inline__ int		genom_deserialize_string256(char **,
					ssize_t *, char[256]);
static __inline__ size_t	genom_maxserialen_t_genom_mwerr(void);
static __inline__ size_t	genom_serialen_t_genom_mwerr(
					const genom_mwerr_detail *);
static __inline__ void		genom_serialize_t_genom_mwerr(char **,
					const genom_mwerr_detail *);
static __inline__ int		genom_deserialize_t_genom_mwerr(char **,
					ssize_t *, genom_mwerr_detail *);
static __inline__ size_t	genom_maxserialen_t_genom_no_such_activity(void);
static __inline__ size_t	genom_serialen_t_genom_no_such_activity(
					const genom_no_such_activity_detail *);
static __inline__ void		genom_serialize_t_genom_no_such_activity(char **,
					const genom_no_such_activity_detail *);
static __inline__ int		genom_deserialize_t_genom_no_such_activity(char **,
					ssize_t *, genom_no_such_activity_detail *);
static __inline__ size_t	genom_maxserialen_t_genom_no_such_inport(void);
static __inline__ size_t	genom_serialen_t_genom_no_such_inport(
					const genom_no_such_inport_detail *);
static __inline__ void		genom_serialize_t_genom_no_such_inport(char **,
					const genom_no_such_inport_detail *);
static __inline__ int		genom_deserialize_t_genom_no_such_inport(char **,
					ssize_t *, genom_no_such_inport_detail *);
static __inline__ size_t	genom_maxserialen_t_genom_no_such_outport(void);
static __inline__ size_t	genom_serialen_t_genom_no_such_outport(
					const genom_no_such_outport_detail *);
static __inline__ void		genom_serialize_t_genom_no_such_outport(char **,
					const genom_no_such_outport_detail *);
static __inline__ int		genom_deserialize_t_genom_no_such_outport(char **,
					ssize_t *, genom_no_such_outport_detail *);
static __inline__ size_t	genom_maxserialen_t_genom_port_io(void);
static __inline__ size_t	genom_serialen_t_genom_port_io(
					const genom_port_io_detail *);
static __inline__ void		genom_serialize_t_genom_port_io(char **,
					const genom_port_io_detail *);
static __inline__ int		genom_deserialize_t_genom_port_io(char **,
					ssize_t *, genom_port_io_detail *);
static __inline__ size_t	genom_maxserialen_t_genom_no_such_remote(void);
static __inline__ size_t	genom_serialen_t_genom_no_such_remote(
					const genom_no_such_remote_detail *);
static __inline__ void		genom_serialize_t_genom_no_such_remote(char **,
					const genom_no_such_remote_detail *);
static __inline__ int		genom_deserialize_t_genom_no_such_remote(char **,
					ssize_t *, genom_no_such_remote_detail *);
static __inline__ size_t	genom_maxserialen_t_genom_no_such_service(void);
static __inline__ size_t	genom_serialen_t_genom_no_such_service(
					const genom_no_such_service_detail *);
static __inline__ void		genom_serialize_t_genom_no_such_service(char **,
					const genom_no_such_service_detail *);
static __inline__ int		genom_deserialize_t_genom_no_such_service(char **,
					ssize_t *, genom_no_such_service_detail *);
static __inline__ size_t	genom_maxserialen_t_genom_remote_io(void);
static __inline__ size_t	genom_serialen_t_genom_remote_io(
					const genom_remote_io_detail *);
static __inline__ void		genom_serialize_t_genom_remote_io(char **,
					const genom_remote_io_detail *);
static __inline__ int		genom_deserialize_t_genom_remote_io(char **,
					ssize_t *, genom_remote_io_detail *);
static __inline__ size_t	genom_maxserialen_t_camera_map(void);
static __inline__ size_t	genom_serialen_t_camera_map(
					const camera_map *);
static __inline__ void		genom_serialize_t_camera_map(char **,
					const camera_map *);
static __inline__ int		genom_deserialize_t_camera_map(char **,
					ssize_t *, camera_map *);
static __inline__ size_t	genom_maxserialen_t_loco_INVALID_ORDER(void);
static __inline__ size_t	genom_serialen_t_loco_INVALID_ORDER(
					const loco_INVALID_ORDER_detail *);
static __inline__ void		genom_serialize_t_loco_INVALID_ORDER(char **,
					const loco_INVALID_ORDER_detail *);
static __inline__ int		genom_deserialize_t_loco_INVALID_ORDER(char **,
					ssize_t *, loco_INVALID_ORDER_detail *);
static __inline__ size_t	genom_maxserialen_t_loco_INVALID_DATA(void);
static __inline__ size_t	genom_serialen_t_loco_INVALID_DATA(
					const loco_INVALID_DATA_detail *);
static __inline__ void		genom_serialize_t_loco_INVALID_DATA(char **,
					const loco_INVALID_DATA_detail *);
static __inline__ int		genom_deserialize_t_loco_INVALID_DATA(char **,
					ssize_t *, loco_INVALID_DATA_detail *);



/* === string64 ========================================================= */

static __inline__ size_t
genom_maxserialen_string64(void)
{
  return 64;
}

static __inline__ size_t
genom_serialen_string64(const char data[64])
{
  (void)data; /* fix -Wunused-parameter */
  return 64;
}

static __inline__ void
genom_serialize_string64(char **buffer, const char data[64])
{
  memcpy(*buffer, data, 64);
  *buffer += 64;
}

static __inline__ int
genom_deserialize_string64(char **buffer, ssize_t *size,
  char data[64])
{
  if (*size != -1) {
    *size -= 64;
    if (*size < 0) return ENOMSG;
  }
  memcpy(data, *buffer, 64);
  *buffer += 64;
  return 0;
}

/* === unsigned_long ==================================================== */

static __inline__ size_t
genom_maxserialen_unsigned_long(void)
{
  return sizeof(uint32_t);
}

static __inline__ size_t
genom_serialen_unsigned_long(uint32_t data)
{
  return sizeof(data);
}

static __inline__ void
genom_serialize_unsigned_long(char **buffer, uint32_t data)
{
  memcpy(*buffer, &(data),
         sizeof(data));
  *buffer += sizeof(data);
}

static __inline__ int
genom_deserialize_unsigned_long(char **buffer, ssize_t *size,
  uint32_t *data)
{
  if (*size != -1) {
    *size -= sizeof(*(data));
    if (*size < 0) return ENOMSG;
  }
  memcpy(&(*(data)), *buffer,
         sizeof(*(data)));
  *buffer += sizeof(*(data));
  return 0;
}

/* === float ============================================================ */

static __inline__ size_t
genom_maxserialen_float(void)
{
  return sizeof(float);
}

static __inline__ size_t
genom_serialen_float(float data)
{
  return sizeof(data);
}

static __inline__ void
genom_serialize_float(char **buffer, float data)
{
  memcpy(*buffer, &(data),
         sizeof(data));
  *buffer += sizeof(data);
}

static __inline__ int
genom_deserialize_float(char **buffer, ssize_t *size,
  float *data)
{
  if (*size != -1) {
    *size -= sizeof(*(data));
    if (*size < 0) return ENOMSG;
  }
  memcpy(&(*(data)), *buffer,
         sizeof(*(data)));
  *buffer += sizeof(*(data));
  return 0;
}

/* === t_genom_state_stats ============================================== */

static __inline__ size_t
genom_maxserialen_t_genom_state_stats(void)
{
  return sizeof(genom_state_stats);
}

static __inline__ size_t
genom_serialen_t_genom_state_stats(const genom_state_stats *data)
{
  return sizeof(*(data));
}

static __inline__ void
genom_serialize_t_genom_state_stats(char **buffer, const genom_state_stats *data)
{
  memcpy(*buffer, &(*(data)),
         sizeof(*(data)));
  *buffer += sizeof(*(data));
}

static __inline__ int
genom_deserialize_t_genom_state_stats(char **buffer, ssize_t *size,
  genom_state_stats *data)
{
  if (*size != -1) {
    *size -= sizeof(*(data));
    if (*size < 0) return ENOMSG;
  }
  memcpy(&(*(data)), *buffer,
         sizeof(*(data)));
  *buffer += sizeof(*(data));
  return 0;
}

/* === t_genom_state_rusage ============================================= */

static __inline__ size_t
genom_maxserialen_t_genom_state_rusage(void)
{
  return sizeof(genom_state_rusage);
}

static __inline__ size_t
genom_serialen_t_genom_state_rusage(const genom_state_rusage *data)
{
  return sizeof(*(data));
}

static __inline__ void
genom_serialize_t_genom_state_rusage(char **buffer, const genom_state_rusage *data)
{
  memcpy(*buffer, &(*(data)),
         sizeof(*(data)));
  *buffer += sizeof(*(data));
}

static __inline__ int
genom_deserialize_t_genom_state_rusage(char **buffer, ssize_t *size,
  genom_state_rusage *data)
{
  if (*size != -1) {
    *size -= sizeof(*(data));
    if (*size < 0) return ENOMSG;
  }
  memcpy(&(*(data)), *buffer,
         sizeof(*(data)));
  *buffer += sizeof(*(data));
  return 0;
}

/* === t_genom_state_activity =========================================== */

static __inline__ size_t
genom_maxserialen_t_genom_state_activity(void)
{
  return sizeof(genom_state_activity);
}

static __inline__ size_t
genom_serialen_t_genom_state_activity(const genom_state_activity *data)
{
  return sizeof(*(data));
}

static __inline__ void
genom_serialize_t_genom_state_activity(char **buffer, const genom_state_activity *data)
{
  memcpy(*buffer, &(*(data)),
         sizeof(*(data)));
  *buffer += sizeof(*(data));
}

static __inline__ int
genom_deserialize_t_genom_state_activity(char **buffer, ssize_t *size,
  genom_state_activity *data)
{
  if (*size != -1) {
    *size -= sizeof(*(data));
    if (*size < 0) return ENOMSG;
  }
  memcpy(&(*(data)), *buffer,
         sizeof(*(data)));
  *buffer += sizeof(*(data));
  return 0;
}

/* === sequence_t_genom_state_activity ================================== */

static __inline__ size_t
genom_maxserialen_sequence_t_genom_state_activity(void)
{
  /* maximum request size for variable types */
  extern size_t loco_varmsg_maxsize;
  return loco_varmsg_maxsize;
}

static __inline__ size_t
genom_serialen_sequence_t_genom_state_activity(const sequence_genom_state_activity *data)
{
  uint32_t i;
  size_t s = sizeof(data->_length);
  for (i=0; i<data->_length; i++)
    s += genom_serialen_t_genom_state_activity(
      &(data->_buffer[i]));
  return s;
}

static __inline__ void
genom_serialize_sequence_t_genom_state_activity(char **buffer, const sequence_genom_state_activity *data)
{
  uint32_t i;
  memcpy(*buffer, &data->_length, sizeof(data->_length));
  *buffer += sizeof(data->_length);
  for (i=0; i<data->_length; i++)
    genom_serialize_t_genom_state_activity(
      buffer, &(data->_buffer[i]));
}

static __inline__ int
genom_deserialize_sequence_t_genom_state_activity(char **buffer, ssize_t *size,
  sequence_genom_state_activity *data)
{
  uint32_t i;
  if (*size != -1) {
    *size -= sizeof(i);
    if (*size < 0) return ENOMSG;
  }
  i = *(uint32_t *)*buffer;
  if (genom_sequence_reserve(data, i)) return ENOMEM;
  *buffer += sizeof(data->_length);
  data->_length = i;
  for (i=0; i<data->_length; i++)
    genom_deserialize_t_genom_state_activity(
      buffer, size, &(data->_buffer[i]));
  return 0;
}

/* === t_genom_state_task =============================================== */

static __inline__ size_t
genom_maxserialen_t_genom_state_task(void)
{
  /* maximum request size for variable types */
  extern size_t loco_varmsg_maxsize;
  return loco_varmsg_maxsize;
}

static __inline__ size_t
genom_serialen_t_genom_state_task(const genom_state_task *data)
{
  size_t s = 0;
  s += genom_serialen_string64(
    data->name);
  s += genom_serialen_t_genom_state_rusage(
    &(data->rusage));
  s += genom_serialen_sequence_t_genom_state_activity(
    &(data->activity));
  return s;
}

static __inline__ void
genom_serialize_t_genom_state_task(char **buffer, const genom_state_task *data)
{
  genom_serialize_string64(
    buffer, data->name);
  genom_serialize_t_genom_state_rusage(
    buffer, &(data->rusage));
  genom_serialize_sequence_t_genom_state_activity(
    buffer, &(data->activity));
}

static __inline__ int
genom_deserialize_t_genom_state_task(char **buffer, ssize_t *size,
  genom_state_task *data)
{
  int s;
  s = genom_deserialize_string64(
    buffer, size, data->name);
  if (s) return s;
  s = genom_deserialize_t_genom_state_rusage(
    buffer, size, &(data->rusage));
  if (s) return s;
  s = genom_deserialize_sequence_t_genom_state_activity(
    buffer, size, &(data->activity));
  if (s) return s;
  return 0;
}

/* === sequence_t_genom_state_task ====================================== */

static __inline__ size_t
genom_maxserialen_sequence_t_genom_state_task(void)
{
  /* maximum request size for variable types */
  extern size_t loco_varmsg_maxsize;
  return loco_varmsg_maxsize;
}

static __inline__ size_t
genom_serialen_sequence_t_genom_state_task(const sequence_genom_state_task *data)
{
  uint32_t i;
  size_t s = sizeof(data->_length);
  for (i=0; i<data->_length; i++)
    s += genom_serialen_t_genom_state_task(
      &(data->_buffer[i]));
  return s;
}

static __inline__ void
genom_serialize_sequence_t_genom_state_task(char **buffer, const sequence_genom_state_task *data)
{
  uint32_t i;
  memcpy(*buffer, &data->_length, sizeof(data->_length));
  *buffer += sizeof(data->_length);
  for (i=0; i<data->_length; i++)
    genom_serialize_t_genom_state_task(
      buffer, &(data->_buffer[i]));
}

static __inline__ int
genom_deserialize_sequence_t_genom_state_task(char **buffer, ssize_t *size,
  sequence_genom_state_task *data)
{
  uint32_t i;
  if (*size != -1) {
    *size -= sizeof(i);
    if (*size < 0) return ENOMSG;
  }
  i = *(uint32_t *)*buffer;
  if (genom_sequence_reserve(data, i)) return ENOMEM;
  *buffer += sizeof(data->_length);
  data->_length = i;
  for (i=0; i<data->_length; i++)
    genom_deserialize_t_genom_state_task(
      buffer, size, &(data->_buffer[i]));
  return 0;
}

/* === string33 ========================================================= */

static __inline__ size_t
genom_maxserialen_string33(void)
{
  return 33;
}

static __inline__ size_t
genom_serialen_string33(const char data[33])
{
  (void)data; /* fix -Wunused-parameter */
  return 33;
}

static __inline__ void
genom_serialize_string33(char **buffer, const char data[33])
{
  memcpy(*buffer, data, 33);
  *buffer += 33;
}

static __inline__ int
genom_deserialize_string33(char **buffer, ssize_t *size,
  char data[33])
{
  if (*size != -1) {
    *size -= 33;
    if (*size < 0) return ENOMSG;
  }
  memcpy(data, *buffer, 33);
  *buffer += 33;
  return 0;
}

/* === string31 ========================================================= */

static __inline__ size_t
genom_maxserialen_string31(void)
{
  return 31;
}

static __inline__ size_t
genom_serialen_string31(const char data[31])
{
  (void)data; /* fix -Wunused-parameter */
  return 31;
}

static __inline__ void
genom_serialize_string31(char **buffer, const char data[31])
{
  memcpy(*buffer, data, 31);
  *buffer += 31;
}

static __inline__ int
genom_deserialize_string31(char **buffer, ssize_t *size,
  char data[31])
{
  if (*size != -1) {
    *size -= 31;
    if (*size < 0) return ENOMSG;
  }
  memcpy(data, *buffer, 31);
  *buffer += 31;
  return 0;
}

/* === string32 ========================================================= */

static __inline__ size_t
genom_maxserialen_string32(void)
{
  return 32;
}

static __inline__ size_t
genom_serialen_string32(const char data[32])
{
  (void)data; /* fix -Wunused-parameter */
  return 32;
}

static __inline__ void
genom_serialize_string32(char **buffer, const char data[32])
{
  memcpy(*buffer, data, 32);
  *buffer += 32;
}

static __inline__ int
genom_deserialize_string32(char **buffer, ssize_t *size,
  char data[32])
{
  if (*size != -1) {
    *size -= 32;
    if (*size < 0) return ENOMSG;
  }
  memcpy(data, *buffer, 32);
  *buffer += 32;
  return 0;
}

/* === t_genom_state_component ========================================== */

static __inline__ size_t
genom_maxserialen_t_genom_state_component(void)
{
  /* maximum request size for variable types */
  extern size_t loco_varmsg_maxsize;
  return loco_varmsg_maxsize;
}

static __inline__ size_t
genom_serialen_t_genom_state_component(const genom_state_component *data)
{
  size_t s = 0;
  s += genom_serialen_sequence_t_genom_state_task(
    &(data->task));
  s += genom_serialen_string33(
    data->digest);
  s += genom_serialen_string31(
    data->date);
  s += genom_serialen_string32(
    data->version);
  return s;
}

static __inline__ void
genom_serialize_t_genom_state_component(char **buffer, const genom_state_component *data)
{
  genom_serialize_sequence_t_genom_state_task(
    buffer, &(data->task));
  genom_serialize_string33(
    buffer, data->digest);
  genom_serialize_string31(
    buffer, data->date);
  genom_serialize_string32(
    buffer, data->version);
}

static __inline__ int
genom_deserialize_t_genom_state_component(char **buffer, ssize_t *size,
  genom_state_component *data)
{
  int s;
  s = genom_deserialize_sequence_t_genom_state_task(
    buffer, size, &(data->task));
  if (s) return s;
  s = genom_deserialize_string33(
    buffer, size, data->digest);
  if (s) return s;
  s = genom_deserialize_string31(
    buffer, size, data->date);
  if (s) return s;
  s = genom_deserialize_string32(
    buffer, size, data->version);
  if (s) return s;
  return 0;
}

/* === t_display_order_enum ============================================= */

static __inline__ size_t
genom_maxserialen_t_display_order_enum(void)
{
  return sizeof(display_order_enum);
}

static __inline__ size_t
genom_serialen_t_display_order_enum(display_order_enum data)
{
  return sizeof(data);
}

static __inline__ void
genom_serialize_t_display_order_enum(char **buffer, display_order_enum data)
{
  memcpy(*buffer, &(data),
         sizeof(data));
  *buffer += sizeof(data);
}

static __inline__ int
genom_deserialize_t_display_order_enum(char **buffer, ssize_t *size,
  display_order_enum *data)
{
  if (*size != -1) {
    *size -= sizeof(*(data));
    if (*size < 0) return ENOMSG;
  }
  memcpy(&(*(data)), *buffer,
         sizeof(*(data)));
  *buffer += sizeof(*(data));
  return 0;
}

/* === t_display_order ================================================== */

static __inline__ size_t
genom_maxserialen_t_display_order(void)
{
  return sizeof(display_order);
}

static __inline__ size_t
genom_serialen_t_display_order(const display_order *data)
{
  return sizeof(*(data));
}

static __inline__ void
genom_serialize_t_display_order(char **buffer, const display_order *data)
{
  memcpy(*buffer, &(*(data)),
         sizeof(*(data)));
  *buffer += sizeof(*(data));
}

static __inline__ int
genom_deserialize_t_display_order(char **buffer, ssize_t *size,
  display_order *data)
{
  if (*size != -1) {
    *size -= sizeof(*(data));
    if (*size < 0) return ENOMSG;
  }
  memcpy(&(*(data)), *buffer,
         sizeof(*(data)));
  *buffer += sizeof(*(data));
  return 0;
}

/* === t_camera_coin ==================================================== */

static __inline__ size_t
genom_maxserialen_t_camera_coin(void)
{
  return sizeof(camera_coin);
}

static __inline__ size_t
genom_serialen_t_camera_coin(const camera_coin *data)
{
  return sizeof(*(data));
}

static __inline__ void
genom_serialize_t_camera_coin(char **buffer, const camera_coin *data)
{
  memcpy(*buffer, &(*(data)),
         sizeof(*(data)));
  *buffer += sizeof(*(data));
}

static __inline__ int
genom_deserialize_t_camera_coin(char **buffer, ssize_t *size,
  camera_coin *data)
{
  if (*size != -1) {
    *size -= sizeof(*(data));
    if (*size < 0) return ENOMSG;
  }
  memcpy(&(*(data)), *buffer,
         sizeof(*(data)));
  *buffer += sizeof(*(data));
  return 0;
}

/* === t_camera_arena =================================================== */

static __inline__ size_t
genom_maxserialen_t_camera_arena(void)
{
  return sizeof(camera_arena);
}

static __inline__ size_t
genom_serialen_t_camera_arena(const camera_arena *data)
{
  return sizeof(*(data));
}

static __inline__ void
genom_serialize_t_camera_arena(char **buffer, const camera_arena *data)
{
  memcpy(*buffer, &(*(data)),
         sizeof(*(data)));
  *buffer += sizeof(*(data));
}

static __inline__ int
genom_deserialize_t_camera_arena(char **buffer, ssize_t *size,
  camera_arena *data)
{
  if (*size != -1) {
    *size -= sizeof(*(data));
    if (*size < 0) return ENOMSG;
  }
  memcpy(&(*(data)), *buffer,
         sizeof(*(data)));
  *buffer += sizeof(*(data));
  return 0;
}

/* === t_camera_robot =================================================== */

static __inline__ size_t
genom_maxserialen_t_camera_robot(void)
{
  return sizeof(camera_robot);
}

static __inline__ size_t
genom_serialen_t_camera_robot(const camera_robot *data)
{
  return sizeof(*(data));
}

static __inline__ void
genom_serialize_t_camera_robot(char **buffer, const camera_robot *data)
{
  memcpy(*buffer, &(*(data)),
         sizeof(*(data)));
  *buffer += sizeof(*(data));
}

static __inline__ int
genom_deserialize_t_camera_robot(char **buffer, ssize_t *size,
  camera_robot *data)
{
  if (*size != -1) {
    *size -= sizeof(*(data));
    if (*size < 0) return ENOMSG;
  }
  memcpy(&(*(data)), *buffer,
         sizeof(*(data)));
  *buffer += sizeof(*(data));
  return 0;
}

/* === t_loco_data ====================================================== */

static __inline__ size_t
genom_maxserialen_t_loco_data(void)
{
  return sizeof(loco_data);
}

static __inline__ size_t
genom_serialen_t_loco_data(const loco_data *data)
{
  return sizeof(*(data));
}

static __inline__ void
genom_serialize_t_loco_data(char **buffer, const loco_data *data)
{
  memcpy(*buffer, &(*(data)),
         sizeof(*(data)));
  *buffer += sizeof(*(data));
}

static __inline__ int
genom_deserialize_t_loco_data(char **buffer, ssize_t *size,
  loco_data *data)
{
  if (*size != -1) {
    *size -= sizeof(*(data));
    if (*size < 0) return ENOMSG;
  }
  memcpy(&(*(data)), *buffer,
         sizeof(*(data)));
  *buffer += sizeof(*(data));
  return 0;
}

/* === t_genom_incompatible_digest_client_digest ======================== */

static __inline__ size_t
genom_maxserialen_t_genom_incompatible_digest_client_digest(void)
{
  return sizeof(genom_incompatible_digest_client_digest);
}

static __inline__ size_t
genom_serialen_t_genom_incompatible_digest_client_digest(const genom_incompatible_digest_client_digest *data)
{
  return sizeof(*(data));
}

static __inline__ void
genom_serialize_t_genom_incompatible_digest_client_digest(char **buffer, const genom_incompatible_digest_client_digest *data)
{
  memcpy(*buffer, &(*(data)),
         sizeof(*(data)));
  *buffer += sizeof(*(data));
}

static __inline__ int
genom_deserialize_t_genom_incompatible_digest_client_digest(char **buffer, ssize_t *size,
  genom_incompatible_digest_client_digest *data)
{
  if (*size != -1) {
    *size -= sizeof(*(data));
    if (*size < 0) return ENOMSG;
  }
  memcpy(&(*(data)), *buffer,
         sizeof(*(data)));
  *buffer += sizeof(*(data));
  return 0;
}

/* === t_genom_incompatible_digest_server_digest ======================== */

static __inline__ size_t
genom_maxserialen_t_genom_incompatible_digest_server_digest(void)
{
  return sizeof(genom_incompatible_digest_server_digest);
}

static __inline__ size_t
genom_serialen_t_genom_incompatible_digest_server_digest(const genom_incompatible_digest_server_digest *data)
{
  return sizeof(*(data));
}

static __inline__ void
genom_serialize_t_genom_incompatible_digest_server_digest(char **buffer, const genom_incompatible_digest_server_digest *data)
{
  memcpy(*buffer, &(*(data)),
         sizeof(*(data)));
  *buffer += sizeof(*(data));
}

static __inline__ int
genom_deserialize_t_genom_incompatible_digest_server_digest(char **buffer, ssize_t *size,
  genom_incompatible_digest_server_digest *data)
{
  if (*size != -1) {
    *size -= sizeof(*(data));
    if (*size < 0) return ENOMSG;
  }
  memcpy(&(*(data)), *buffer,
         sizeof(*(data)));
  *buffer += sizeof(*(data));
  return 0;
}

/* === t_genom_incompatible_digest ====================================== */

static __inline__ size_t
genom_maxserialen_t_genom_incompatible_digest(void)
{
  return sizeof(genom_incompatible_digest_detail);
}

static __inline__ size_t
genom_serialen_t_genom_incompatible_digest(const genom_incompatible_digest_detail *data)
{
  return sizeof(*data);
}

static __inline__ void
genom_serialize_t_genom_incompatible_digest(char **buffer, const genom_incompatible_digest_detail *data)
{
  memcpy(*buffer, data, sizeof(*data));
  *buffer += sizeof(*data);
}

static __inline__ int
genom_deserialize_t_genom_incompatible_digest(char **buffer, ssize_t *size,
  genom_incompatible_digest_detail *data)
{
  if (*size != -1) {
    *size -= sizeof(*data);
    if (*size < 0) return ENOMSG;
  }
  memcpy(data, *buffer, sizeof(*data));
  *buffer += sizeof(*data);
  return 0;
}

/* === string128 ======================================================== */

static __inline__ size_t
genom_maxserialen_string128(void)
{
  return 128;
}

static __inline__ size_t
genom_serialen_string128(const char data[128])
{
  (void)data; /* fix -Wunused-parameter */
  return 128;
}

static __inline__ void
genom_serialize_string128(char **buffer, const char data[128])
{
  memcpy(*buffer, data, 128);
  *buffer += 128;
}

static __inline__ int
genom_deserialize_string128(char **buffer, ssize_t *size,
  char data[128])
{
  if (*size != -1) {
    *size -= 128;
    if (*size < 0) return ENOMSG;
  }
  memcpy(data, *buffer, 128);
  *buffer += 128;
  return 0;
}

/* === t_genom_bad_transition =========================================== */

static __inline__ size_t
genom_maxserialen_t_genom_bad_transition(void)
{
  return sizeof(genom_bad_transition_detail);
}

static __inline__ size_t
genom_serialen_t_genom_bad_transition(const genom_bad_transition_detail *data)
{
  return sizeof(*data);
}

static __inline__ void
genom_serialize_t_genom_bad_transition(char **buffer, const genom_bad_transition_detail *data)
{
  memcpy(*buffer, data, sizeof(*data));
  *buffer += sizeof(*data);
}

static __inline__ int
genom_deserialize_t_genom_bad_transition(char **buffer, ssize_t *size,
  genom_bad_transition_detail *data)
{
  if (*size != -1) {
    *size -= sizeof(*data);
    if (*size < 0) return ENOMSG;
  }
  memcpy(data, *buffer, sizeof(*data));
  *buffer += sizeof(*data);
  return 0;
}

/* === t_genom_interrupted ============================================== */

static __inline__ size_t
genom_maxserialen_t_genom_interrupted(void)
{
  return sizeof(genom_interrupted_detail);
}

static __inline__ size_t
genom_serialen_t_genom_interrupted(const genom_interrupted_detail *data)
{
  return sizeof(*data);
}

static __inline__ void
genom_serialize_t_genom_interrupted(char **buffer, const genom_interrupted_detail *data)
{
  memcpy(*buffer, data, sizeof(*data));
  *buffer += sizeof(*data);
}

static __inline__ int
genom_deserialize_t_genom_interrupted(char **buffer, ssize_t *size,
  genom_interrupted_detail *data)
{
  if (*size != -1) {
    *size -= sizeof(*data);
    if (*size < 0) return ENOMSG;
  }
  memcpy(data, *buffer, sizeof(*data));
  *buffer += sizeof(*data);
  return 0;
}

/* === t_genom_serialization ============================================ */

static __inline__ size_t
genom_maxserialen_t_genom_serialization(void)
{
  return 0;
}

static __inline__ size_t
genom_serialen_t_genom_serialization(const genom_serialization_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
  return 0;
}

static __inline__ void
genom_serialize_t_genom_serialization(char **buffer, const genom_serialization_detail *data)
{
  (void)buffer; (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_deserialize_t_genom_serialization(char **buffer, ssize_t *size,
  genom_serialization_detail *data)
{
  (void)buffer; (void)size; (void)data; /* fix -Wunused-parameter */
  return 0;
}

/* === t_genom_too_many_activities ====================================== */

static __inline__ size_t
genom_maxserialen_t_genom_too_many_activities(void)
{
  return 0;
}

static __inline__ size_t
genom_serialen_t_genom_too_many_activities(const genom_too_many_activities_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
  return 0;
}

static __inline__ void
genom_serialize_t_genom_too_many_activities(char **buffer, const genom_too_many_activities_detail *data)
{
  (void)buffer; (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_deserialize_t_genom_too_many_activities(char **buffer, ssize_t *size,
  genom_too_many_activities_detail *data)
{
  (void)buffer; (void)size; (void)data; /* fix -Wunused-parameter */
  return 0;
}

/* === t_genom_disallowed =============================================== */

static __inline__ size_t
genom_maxserialen_t_genom_disallowed(void)
{
  return 0;
}

static __inline__ size_t
genom_serialen_t_genom_disallowed(const genom_disallowed_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
  return 0;
}

static __inline__ void
genom_serialize_t_genom_disallowed(char **buffer, const genom_disallowed_detail *data)
{
  (void)buffer; (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_deserialize_t_genom_disallowed(char **buffer, ssize_t *size,
  genom_disallowed_detail *data)
{
  (void)buffer; (void)size; (void)data; /* fix -Wunused-parameter */
  return 0;
}

/* === string256 ======================================================== */

static __inline__ size_t
genom_maxserialen_string256(void)
{
  return 256;
}

static __inline__ size_t
genom_serialen_string256(const char data[256])
{
  (void)data; /* fix -Wunused-parameter */
  return 256;
}

static __inline__ void
genom_serialize_string256(char **buffer, const char data[256])
{
  memcpy(*buffer, data, 256);
  *buffer += 256;
}

static __inline__ int
genom_deserialize_string256(char **buffer, ssize_t *size,
  char data[256])
{
  if (*size != -1) {
    *size -= 256;
    if (*size < 0) return ENOMSG;
  }
  memcpy(data, *buffer, 256);
  *buffer += 256;
  return 0;
}

/* === t_genom_mwerr ==================================================== */

static __inline__ size_t
genom_maxserialen_t_genom_mwerr(void)
{
  return sizeof(genom_mwerr_detail);
}

static __inline__ size_t
genom_serialen_t_genom_mwerr(const genom_mwerr_detail *data)
{
  return sizeof(*data);
}

static __inline__ void
genom_serialize_t_genom_mwerr(char **buffer, const genom_mwerr_detail *data)
{
  memcpy(*buffer, data, sizeof(*data));
  *buffer += sizeof(*data);
}

static __inline__ int
genom_deserialize_t_genom_mwerr(char **buffer, ssize_t *size,
  genom_mwerr_detail *data)
{
  if (*size != -1) {
    *size -= sizeof(*data);
    if (*size < 0) return ENOMSG;
  }
  memcpy(data, *buffer, sizeof(*data));
  *buffer += sizeof(*data);
  return 0;
}

/* === t_genom_no_such_activity ========================================= */

static __inline__ size_t
genom_maxserialen_t_genom_no_such_activity(void)
{
  return 0;
}

static __inline__ size_t
genom_serialen_t_genom_no_such_activity(const genom_no_such_activity_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
  return 0;
}

static __inline__ void
genom_serialize_t_genom_no_such_activity(char **buffer, const genom_no_such_activity_detail *data)
{
  (void)buffer; (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_deserialize_t_genom_no_such_activity(char **buffer, ssize_t *size,
  genom_no_such_activity_detail *data)
{
  (void)buffer; (void)size; (void)data; /* fix -Wunused-parameter */
  return 0;
}

/* === t_genom_no_such_inport =========================================== */

static __inline__ size_t
genom_maxserialen_t_genom_no_such_inport(void)
{
  return 0;
}

static __inline__ size_t
genom_serialen_t_genom_no_such_inport(const genom_no_such_inport_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
  return 0;
}

static __inline__ void
genom_serialize_t_genom_no_such_inport(char **buffer, const genom_no_such_inport_detail *data)
{
  (void)buffer; (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_deserialize_t_genom_no_such_inport(char **buffer, ssize_t *size,
  genom_no_such_inport_detail *data)
{
  (void)buffer; (void)size; (void)data; /* fix -Wunused-parameter */
  return 0;
}

/* === t_genom_no_such_outport ========================================== */

static __inline__ size_t
genom_maxserialen_t_genom_no_such_outport(void)
{
  return 0;
}

static __inline__ size_t
genom_serialen_t_genom_no_such_outport(const genom_no_such_outport_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
  return 0;
}

static __inline__ void
genom_serialize_t_genom_no_such_outport(char **buffer, const genom_no_such_outport_detail *data)
{
  (void)buffer; (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_deserialize_t_genom_no_such_outport(char **buffer, ssize_t *size,
  genom_no_such_outport_detail *data)
{
  (void)buffer; (void)size; (void)data; /* fix -Wunused-parameter */
  return 0;
}

/* === t_genom_port_io ================================================== */

static __inline__ size_t
genom_maxserialen_t_genom_port_io(void)
{
  return 0;
}

static __inline__ size_t
genom_serialen_t_genom_port_io(const genom_port_io_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
  return 0;
}

static __inline__ void
genom_serialize_t_genom_port_io(char **buffer, const genom_port_io_detail *data)
{
  (void)buffer; (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_deserialize_t_genom_port_io(char **buffer, ssize_t *size,
  genom_port_io_detail *data)
{
  (void)buffer; (void)size; (void)data; /* fix -Wunused-parameter */
  return 0;
}

/* === t_genom_no_such_remote =========================================== */

static __inline__ size_t
genom_maxserialen_t_genom_no_such_remote(void)
{
  return 0;
}

static __inline__ size_t
genom_serialen_t_genom_no_such_remote(const genom_no_such_remote_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
  return 0;
}

static __inline__ void
genom_serialize_t_genom_no_such_remote(char **buffer, const genom_no_such_remote_detail *data)
{
  (void)buffer; (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_deserialize_t_genom_no_such_remote(char **buffer, ssize_t *size,
  genom_no_such_remote_detail *data)
{
  (void)buffer; (void)size; (void)data; /* fix -Wunused-parameter */
  return 0;
}

/* === t_genom_no_such_service ========================================== */

static __inline__ size_t
genom_maxserialen_t_genom_no_such_service(void)
{
  return 0;
}

static __inline__ size_t
genom_serialen_t_genom_no_such_service(const genom_no_such_service_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
  return 0;
}

static __inline__ void
genom_serialize_t_genom_no_such_service(char **buffer, const genom_no_such_service_detail *data)
{
  (void)buffer; (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_deserialize_t_genom_no_such_service(char **buffer, ssize_t *size,
  genom_no_such_service_detail *data)
{
  (void)buffer; (void)size; (void)data; /* fix -Wunused-parameter */
  return 0;
}

/* === t_genom_remote_io ================================================ */

static __inline__ size_t
genom_maxserialen_t_genom_remote_io(void)
{
  return 0;
}

static __inline__ size_t
genom_serialen_t_genom_remote_io(const genom_remote_io_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
  return 0;
}

static __inline__ void
genom_serialize_t_genom_remote_io(char **buffer, const genom_remote_io_detail *data)
{
  (void)buffer; (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_deserialize_t_genom_remote_io(char **buffer, ssize_t *size,
  genom_remote_io_detail *data)
{
  (void)buffer; (void)size; (void)data; /* fix -Wunused-parameter */
  return 0;
}

/* === t_camera_map ===================================================== */

static __inline__ size_t
genom_maxserialen_t_camera_map(void)
{
  return sizeof(camera_map);
}

static __inline__ size_t
genom_serialen_t_camera_map(const camera_map *data)
{
  return sizeof(*(data));
}

static __inline__ void
genom_serialize_t_camera_map(char **buffer, const camera_map *data)
{
  memcpy(*buffer, &(*(data)),
         sizeof(*(data)));
  *buffer += sizeof(*(data));
}

static __inline__ int
genom_deserialize_t_camera_map(char **buffer, ssize_t *size,
  camera_map *data)
{
  if (*size != -1) {
    *size -= sizeof(*(data));
    if (*size < 0) return ENOMSG;
  }
  memcpy(&(*(data)), *buffer,
         sizeof(*(data)));
  *buffer += sizeof(*(data));
  return 0;
}

/* === t_loco_INVALID_ORDER ============================================= */

static __inline__ size_t
genom_maxserialen_t_loco_INVALID_ORDER(void)
{
  return 0;
}

static __inline__ size_t
genom_serialen_t_loco_INVALID_ORDER(const loco_INVALID_ORDER_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
  return 0;
}

static __inline__ void
genom_serialize_t_loco_INVALID_ORDER(char **buffer, const loco_INVALID_ORDER_detail *data)
{
  (void)buffer; (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_deserialize_t_loco_INVALID_ORDER(char **buffer, ssize_t *size,
  loco_INVALID_ORDER_detail *data)
{
  (void)buffer; (void)size; (void)data; /* fix -Wunused-parameter */
  return 0;
}

/* === t_loco_INVALID_DATA ============================================== */

static __inline__ size_t
genom_maxserialen_t_loco_INVALID_DATA(void)
{
  return 0;
}

static __inline__ size_t
genom_serialen_t_loco_INVALID_DATA(const loco_INVALID_DATA_detail *data)
{
  (void)data; /* fix -Wunused-parameter */
  return 0;
}

static __inline__ void
genom_serialize_t_loco_INVALID_DATA(char **buffer, const loco_INVALID_DATA_detail *data)
{
  (void)buffer; (void)data; /* fix -Wunused-parameter */
}

static __inline__ int
genom_deserialize_t_loco_INVALID_DATA(char **buffer, ssize_t *size,
  loco_INVALID_DATA_detail *data)
{
  (void)buffer; (void)size; (void)data; /* fix -Wunused-parameter */
  return 0;
}

#endif /* H_GENOM_SERIALIZE */
