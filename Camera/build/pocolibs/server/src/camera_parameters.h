/* --- Generated by genom 2.99.29. Do not edit -------------------------- */

#ifndef H_CAMERA_PARAMETERS
#define H_CAMERA_PARAMETERS

#include "camera_c_types.h"


/* --- Service input and output structures --------------------------------- */


/* input of abort_activity */
struct genom_camera_abort_activity_input {
  uint32_t activity;
};

/* output of abort_activity */
struct genom_camera_abort_activity_output {
};


int	genom_camera_abort_activity_encode(char *buffer, int size,
		char *dst, int maxsize);
int	genom_camera_abort_activity_decode(char *buffer, int size,
		char *dst, int maxsize);

/* input of connect_port */
struct genom_camera_connect_port_input {
  char local[128];
  char remote[128];
};

/* output of connect_port */
struct genom_camera_connect_port_output {
};


int	genom_camera_connect_port_encode(char *buffer, int size,
		char *dst, int maxsize);
int	genom_camera_connect_port_decode(char *buffer, int size,
		char *dst, int maxsize);

/* input of connect_service */
struct genom_camera_connect_service_input {
  char local[128];
  char remote[128];
};

/* output of connect_service */
struct genom_camera_connect_service_output {
};


int	genom_camera_connect_service_encode(char *buffer, int size,
		char *dst, int maxsize);
int	genom_camera_connect_service_decode(char *buffer, int size,
		char *dst, int maxsize);

/* input of kill */
struct genom_camera_kill_input {
};

/* output of kill */
struct genom_camera_kill_output {
};


int	genom_camera_kill_encode(char *buffer, int size,
		char *dst, int maxsize);
int	genom_camera_kill_decode(char *buffer, int size,
		char *dst, int maxsize);

/* input of GetCurrentPosition */
struct genom_camera_GetCurrentPosition_input {
};

/* output of GetCurrentPosition */
struct genom_camera_GetCurrentPosition_output {
  camera_robot position;
};


int	genom_camera_GetCurrentPosition_encode(char *buffer, int size,
		char *dst, int maxsize);
int	genom_camera_GetCurrentPosition_decode(char *buffer, int size,
		char *dst, int maxsize);

/* input of GetCurrentMap */
struct genom_camera_GetCurrentMap_input {
};

/* output of GetCurrentMap */
struct genom_camera_GetCurrentMap_output {
  camera_map image;
};


int	genom_camera_GetCurrentMap_encode(char *buffer, int size,
		char *dst, int maxsize);
int	genom_camera_GetCurrentMap_decode(char *buffer, int size,
		char *dst, int maxsize);

/* input of GetCurrentArena */
struct genom_camera_GetCurrentArena_input {
};

/* output of GetCurrentArena */
struct genom_camera_GetCurrentArena_output {
  camera_arena arene;
};


int	genom_camera_GetCurrentArena_encode(char *buffer, int size,
		char *dst, int maxsize);
int	genom_camera_GetCurrentArena_decode(char *buffer, int size,
		char *dst, int maxsize);

/* input of FilmStop */
struct genom_camera_FilmStop_input {
};

/* output of FilmStop */
struct genom_camera_FilmStop_output {
};


int	genom_camera_FilmStop_encode(char *buffer, int size,
		char *dst, int maxsize);
int	genom_camera_FilmStop_decode(char *buffer, int size,
		char *dst, int maxsize);

/* input of StartFilm */
struct genom_camera_StartFilm_input {
};

/* output of StartFilm */
struct genom_camera_StartFilm_output {
};


int	genom_camera_StartFilm_encode(char *buffer, int size,
		char *dst, int maxsize);
int	genom_camera_StartFilm_decode(char *buffer, int size,
		char *dst, int maxsize);


/* --- Remote input and output structures ---------------------------------- */



/* --- Exceptions ---------------------------------------------------------- */

int	genom_camera_genom_incompatible_digest_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_camera_genom_bad_transition_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_camera_genom_interrupted_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_camera_genom_serialization_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_camera_genom_too_many_activities_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_camera_genom_disallowed_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_camera_genom_mwerr_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_camera_genom_no_such_activity_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_camera_genom_no_such_inport_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_camera_genom_no_such_outport_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_camera_genom_port_io_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_camera_genom_no_such_remote_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_camera_genom_no_such_service_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_camera_genom_remote_io_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_camera_camera_INVALID_DATA_encodex(char *buffer, int size,
                char *dst, int maxsize);
int	genom_camera_genom_unkex_encodex(char *buffer, int size, char *dst,
		int maxsize);
int	genom_camera_genom_syserr_encodex(char *buffer, int size, char *dst,
		int maxsize);

#endif /* H_CAMERA_PARAMETERS */
